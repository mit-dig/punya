// -*- mode: java; c-basic-offset: 2; -*-
// Copyright 2012 Massachusetts Institute of Technology. All rights reserved.

/**
 * Visual Blocks Language
 *
 * Copyright 2012 Google Inc.
 * http://blockly.googlecode.com/
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Korean strings.
 * @author pillarlee16@gmail.com (Byeongju Lee)
 */

'use strict'

goog.provide('Blockly.Msg.ko_kr');

/**
 * Due to the frequency of long strings, the 80-column wrap rule need not apply
 * to message files.
 */

Blockly.Msg.ko_kr.switch_language_to_korean = {
  // Switch language to Korean.
  category: '',
  helpUrl: '',
  init: function() {
    Blockly.Msg.DUPLICATE_BLOCK = '복제하기';
    Blockly.Msg.REMOVE_COMMENT = '주석 삭제하기';
    Blockly.Msg.ADD_COMMENT = '주석 추가하기';
    Blockly.Msg.EXTERNAL_INPUTS = '외부 입력값';
    Blockly.Msg.INLINE_INPUTS = '블럭 내부 입력값';
    Blockly.Msg.HORIZONTAL_PARAMETERS = '가로로 배열하기';
    Blockly.Msg.VERTICAL_PARAMETERS = '세로로 배열하기';
    Blockly.Msg.DELETE_BLOCK = '블록 삭제하기';
    Blockly.Msg.DELETE_X_BLOCKS = '블록 %1개 삭제하기';
    Blockly.Msg.COLLAPSE_BLOCK = '블록 접기';
    Blockly.Msg.EXPAND_BLOCK = '블록 펼치기';
    Blockly.Msg.DISABLE_BLOCK = '블록 비활성화하기';
    Blockly.Msg.ENABLE_BLOCK = '블록 활성화하기';
    Blockly.Msg.HELP = '도움말';
    Blockly.Msg.EXPORT_IMAGE = '블록을 이미지로 다운로드하기';
    Blockly.Msg.COLLAPSE_ALL = '블록 모두 접기';
    Blockly.Msg.EXPAND_ALL = '블록 모두 펼치기';
    Blockly.Msg.ARRANGE_H = '블록 가로로 배열하기';
    Blockly.Msg.ARRANGE_V = '블록 세로로 배열하기';
    Blockly.Msg.ARRANGE_S = '블록 대각선으로 배열하기';
    Blockly.Msg.SORT_W = '블록 너비순으로 정렬하기';
    Blockly.Msg.SORT_H = '블록 높이순으로 정렬하기';
    Blockly.Msg.SORT_C = '블록 카테고리별로 정렬하기';
    Blockly.MSG_CHANGE_VALUE_TITLE = '값 바꾸기:';
    Blockly.MSG_NEW_VARIABLE = '새 변수...';
    Blockly.MSG_NEW_VARIABLE_TITLE = '새 변수 이름:';
    Blockly.MSG_RENAME_VARIABLE = '변수 이름 바꾸기...';
    Blockly.MSG_RENAME_VARIABLE_TITLE = '모든 "%1" 변수 이름 바꾸기:';
    Blockly.MSG_VARIABLE_CATEGORY = '변수';
    Blockly.MSG_PROCEDURE_CATEGORY = '함수';
    Blockly.ERROR_BLOCK_CANNOT_BE_IN_DEFINTION = "이 블럭은 정의 내에 있을 수 없습니다";
    Blockly.ERROR_SELECT_VALID_ITEM_FROM_DROPDOWN = "드롭 다운에서 유효한 항목을 선택하세요.";
    Blockly.ERROR_DUPLICATE_EVENT_HANDLER = "이 컴포넌트에 같은 이벤트 핸들러가 여러 개 있습니다.";
    Blockly.Msg.LANG_COLOUR_PICKER_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/colors#basic';
    Blockly.Msg.LANG_COLOUR_PICKER_TOOLTIP = '사각형을 클릭하여 색상을 고르세요';
    Blockly.Msg.LANG_COLOUR_BLACK = '검정';
    Blockly.Msg.LANG_COLOUR_WHITE = '흰색';
    Blockly.Msg.LANG_COLOUR_RED = '빨강';
    Blockly.Msg.LANG_COLOUR_PINK = '분홍';
    Blockly.Msg.LANG_COLOUR_ORANGE = '주황';
    Blockly.Msg.LANG_COLOUR_YELLOW = '노랑';
    Blockly.Msg.LANG_COLOUR_GREEN = '초록';
    Blockly.Msg.LANG_COLOUR_CYAN = '청록';
    Blockly.Msg.LANG_COLOUR_BLUE = '파랑';
    Blockly.Msg.LANG_COLOUR_MAGENTA = '자홍색';
    Blockly.Msg.LANG_COLOUR_LIGHT_GRAY = '밝은 회색';
    Blockly.Msg.LANG_COLOUR_DARK_GRAY = '짙은 회색';
    Blockly.Msg.LANG_COLOUR_GRAY = '회색';
    Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR = '색상 분리하기';
    Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/colors#split';
    Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR_TOOLTIP = "각각 0에서 255사이의 빨강, 초록, 파랑색과 투명도값을 가지는 리스트를 반환합니다.";
    Blockly.Msg.LANG_COLOUR_MAKE_COLOUR = '색상 만들기';
    Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/colors#make';
    Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_TOOLTIP = "주어진 빨강, 초록, 파랑색과 투명도값을 조합한 색상을 만듭니다.";
    Blockly.Msg.LANG_CATEGORY_CONTROLS = '제어';
    Blockly.Msg.LANG_CONTROLS_IF_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#if';
    Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_1 = '만약 주어진 값이 참이면, 다음 명령문을 실행합니다.';
    Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_2 = '만약 주어진 값이 참이면, 첫번째 명령문 블록을 실행하고, 아니라면, 두번째 명령문 블록을 실행합니다.';
    Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_3 = '만약 주어진 값이 참이면, 첫번째 명령문 블록을 실행합니다. 그렇지 않고 두번째 값이 참이면, 두번째 명령문 블럭을 실행합니다.';
    Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_4 = '만약 첫번째 값이 참이면, 첫번째 명령문 블록을 실행합니다.\n 그렇지 않고 두번째 값이 참이면 두번째 명령문 블록을 실행합니다.\n 모든 값이 참이 아니면 마지막 명령문 블록을 실행합니다.';
    Blockly.Msg.LANG_CONTROLS_IF_MSG_IF = '만약';
    Blockly.Msg.LANG_CONTROLS_IF_MSG_ELSEIF = '아니고 … 라면';
    Blockly.Msg.LANG_CONTROLS_IF_MSG_ELSE = '아니면';
    Blockly.Msg.LANG_CONTROLS_IF_MSG_THEN = '그러면';
    Blockly.Msg.LANG_CONTROLS_IF_IF_TITLE_IF = '만약';
    Blockly.Msg.LANG_CONTROLS_IF_IF_TOOLTIP = '조건을 추가 또는 삭제하거나 순서를 바꾸어 만약 블럭을 재설정합니다.';
    Blockly.Msg.LANG_CONTROLS_IF_ELSEIF_TITLE_ELSEIF = '아니고 … 만약';
    Blockly.Msg.LANG_CONTROLS_IF_ELSEIF_TOOLTIP = '만약 블럭에 조건을 추가합니다.';
    Blockly.Msg.LANG_CONTROLS_IF_ELSE_TITLE_ELSE = '아니면';
    Blockly.Msg.LANG_CONTROLS_IF_ELSE_TOOLTIP = '만약 블럭의 모든 조건을 검사한 후 실행될 마지막 조건을 추가합니다.';
    Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#while';
    Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TITLE_REPEAT = '반복';
    Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_INPUT_DO = '실행';
    Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE = '하는 동안';
    Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = '할 때 까지';
    Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = '주어진 값이 참이면, 계속하여 명령문을 실행합니다.';
    Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = '주어진 값이 거짓이면, 계속하여 명령문을 실행합니다.';
    Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_1 = '검사 결과가 참이라면, 계속하여 \'실행\' 구역에 있는 블록을 실행합니다.';
    Blockly.Msg.LANG_CONTROLS_FOR_HELPURL = '';
    Blockly.Msg.LANG_CONTROLS_FOR_INPUT_WITH = '숫자 세기';
    Blockly.Msg.LANG_CONTROLS_FOR_INPUT_VAR = 'x';
    Blockly.Msg.LANG_CONTROLS_FOR_INPUT_FROM = '부터';
    Blockly.Msg.LANG_CONTROLS_FOR_INPUT_TO = '까지';
    Blockly.Msg.LANG_CONTROLS_FOR_INPUT_DO = '실행';
    Blockly.Msg.LANG_CONTROLS_FOR_TOOLTIP = '시작 숫자부터 마지막 숫자까지 숫자를 셉니다.\n 각 숫자마다, 현재 숫자를 변수 "%1"에 지정하고\n 해당 명령문을 실행합니다.';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#forrange';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_ITEM = '각각 반복';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_VAR = '숫자';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_START = '시작';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_END = '끝';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_STEP = '간격';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_DO = '실행';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_TEXT = '범위내의 각 숫자마다';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_PREFIX = '각 ';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_SUFFIX = ' 범위내의';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_TOOLTIP = '시작부터 끝까지 범위 내의 각 간격의 숫자마다 \'실행\' 영역의 블록을 실행합니다.  현재 숫자를 참조하려면 해당 변수 이름의 가져오기 블록을 사용하세요.';
    Blockly.Msg.LANG_CONTROLS_FOREACH_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#foreach';
    Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_ITEM = '각각 반복';
    Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_VAR = '항목';
    Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_INLIST = '리스트';
    Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_DO = '실행';
    Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_TEXT = '각각 리스트 항목';
    Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_PREFIX = '각 ';
    Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_SUFFIX = ' 리스트의';
    Blockly.Msg.LANG_CONTROLS_FOREACH_TOOLTIP = '리스트의 각 항목마다 \'실행\' 영역의 블록을 실행합니다. 리스트의 현재 항목을 참조하려면 해당 변수 이름의 가져오기 블록을 사용하세요.';
    Blockly.Msg.LANG_CONTROLS_GET_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#get';
    Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_HELPURL = 'http://en.wikipedia.org/wiki/Control_flow';
    Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_INPUT_OFLOOP = '반복의';
    Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = '벗어나기';
    Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = '다음 반복 이어나가기';
    Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = '진입되어 있는 반복문 벗어나기';
    Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = '이번 반복 블록의 나머지는 뛰어넘고, \n 다음 반복 블록으로 이어나갑니다.';
    Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_WARNING = '경고: 이 블럭은 반복문 안에서만 사용됩니다.';
    Blockly.Msg.LANG_CONTROLS_WHILE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#while';
    Blockly.Msg.LANG_CONTROLS_WHILE_TITLE = '~하는 동안';
    Blockly.Msg.LANG_CONTROLS_WHILE_INPUT_TEST = '검사';
    Blockly.Msg.LANG_CONTROLS_WHILE_INPUT_DO = '실행';
    Blockly.Msg.LANG_CONTROLS_WHILE_COLLAPSED_TEXT = '~하는 동안';
    Blockly.Msg.LANG_CONTROLS_WHILE_TOOLTIP = '검사 결과가 참이라면 \'실행\' 구역의 블록을 계속하여 실행합니다.';
    Blockly.Msg.LANG_CONTROLS_CHOOSE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#choose';
    Blockly.Msg.LANG_CONTROLS_CHOOSE_TITLE = '만약';
    Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_TEST = '';
    Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_THEN_RETURN = '그러면';
    Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_ELSE_RETURN = '아니면';
    Blockly.Msg.LANG_CONTROLS_CHOOSE_COLLAPSED_TEXT = '만약';
    Blockly.Msg.LANG_CONTROLS_CHOOSE_TOOLTIP = '만약 조건이 참이라면, \'그러면-반환\' 슬롯에 있는 표현식을 실행한 결과가 반환되고, 그렇지 않으면 \'아니면-반환\' 슬롯에 있는 표현식을 실행한 결과가 반환됩니다. 즉, 적어도 하나의 표현식은 실행되어 반환되게 됩니다.';
    Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#doreturn';
    Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_INPUT_DO = '실행';
    Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_INPUT_RETURN = '결과';
    Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_TOOLTIP = '\'실행\' 블록이 실행되고 명령문을 반환합니다. 변수에 값을 반환하기 전에 함수를 실행해야한다면 유용하게 사용할 수 있습니다.';
    Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_COLLAPSED_TEXT = '실행/결과';
    Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_TITLE = '결과 실행';
    Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_TITLE = '결과 무시하고 실행';
    Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#evaluate';
    Blockly.Msg.LANG_CONTROLS_EVAL_BUT_COLLAPSED_TEXT = '무시하고 실행';
    Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_TOOLTIP = '모든 반환값을 무시하고 연결된 코드의 블럭을 실행합니다. 반환값을 가지는 함수를 호출하고 싶지만, 그 값이 필요없을 때 유용하게 사용 가능합니다.';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#openscreen';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_TITLE = '다른 스크린 열기';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_INPUT_SCREENNAME = '스크린 이름';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_COLLAPSED_TEXT = '스크린 열기';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_TOOLTIP = '다중 스크린 앱에 새 스크린을 엽니다.';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#openscreenwithvalue';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_TITLE = '시작 값을 전달하며 다른 스크린 열기';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_INPUT_SCREENNAME = '스크린 이름';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_INPUT_STARTVALUE = '시작 값';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_COLLAPSED_TEXT = '값을 전달하며 스크린 열기';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_TOOLTIP = '다중 스크린 앱에 새로운 스크린을 열고 시작 값을 전달합니다.';
    Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#getstartvalue';
    Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_TITLE = '시작 값 가져오기';
    Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_INPUT_SCREENNAME = '스크린 이름';
    Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_INPUT_STARTVALUE = '시작 값';
    Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_COLLAPSED_TEXT = '시작 값 가져오기';
    Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_TOOLTIP = '스크린이 열릴 때 전달 받은 시작 값입니다. 만약 전달 받은 값이 없다면, 빈 텍스트를 반환합니다.';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#closescreen';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_TITLE = '스크린 닫기';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_COLLAPSED_TEXT = '스크린 닫기';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_TOOLTIP = '현재 스크린을 닫습니다.';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#closescreenwithvalue';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_TITLE = '값을 전달하며 스크린 닫기';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_INPUT_RESULT = '결과';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_COLLAPSED_TEXT = '값을 전달하며 스크린 닫기';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_TOOLTIP = '현재 스크린을 닫습니다. 그리고 새로 열리는 스크린에 결과를 반환합니다.';
    Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#closeapp';
    Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_TITLE = '앱 종료';
    Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_COLLAPSED_TEXT = '앱 종료';
    Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_TOOLTIP = '이 앱의 모든 스크린을 닫고 앱을 종료시킵니다.';
    Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#getplainstarttext';
    Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_TITLE = '일반 시작 텍스트 가져오기';
    Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_COLLAPSED_TEXT = '일반 시작 텍스트 가져오기';
    Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_TOOLTIP = '다른 앱에서 이 앱을 실행했을 때 이 스크린에 넘겨준 일반 텍스트 반환합니다. 넘겨 받은 값이 없다면, 빈 텍스트를 반환합니다. 여러개의 스크린을 가지고 있는 앱들은, \'일반 시작 텍스트 가져오기\' 보다 \'시작 값 가져오기\'를 사용하세요.';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#closescreenwithplaintext';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_TITLE = '일반 텍스트를 전달하며 스크린 닫기';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_INPUT_TEXT = '텍스트';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_COLLAPSED_TEXT = '일반 텍스트를 전달하며 스크린 닫기';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_TOOLTIP = '현재 스크린을 닫습니다. 그리고 열려있는 앱에 텍스트를 반환합니다. 여러개의 스크린을 가지고 있는 앱들은, 일반 텍스트를 전달하며 스크린 닫기 보다 값을 전달하며 스크린 닫기를 사용하세요.';
    Blockly.Msg.LANG_CATEGORY_LOGIC = '논리';
    Blockly.Msg.LANG_LOGIC_COMPARE_HELPURL = 'http://en.wikipedia.org/wiki/Inequality_(mathematics)';
    Blockly.Msg.LANG_LOGIC_COMPARE_HELPURL_EQ = 'http://appinventor.mit.edu/explore/ai2/support/blocks/logic#=';
    Blockly.Msg.LANG_LOGIC_COMPARE_HELPURL_NEQ = 'http://appinventor.mit.edu/explore/ai2/support/blocks/logic#not=';
    Blockly.Msg.LANG_LOGIC_COMPARE_TOOLTIP_EQ = '두 값이 동일한지 아닌지 검사합니다. \n 비교되는 값들이 숫자 뿐 아니라 다른 유형의 값도 될 수 있습니다. \n 숫자는 보이는 형태의 문자열과 동일한 값으로 간주합니다. \n 예를 들어, 숫자 0은 텍스트 "0"과 동일합니다. 또한 두 문자열이 나타내는 \n 숫자가 동일한 값이라면, 두 문자열은 서로 동일합니다. 예를 들어 \n "1"은 "01"과 동일합니다.';
    Blockly.Msg.LANG_LOGIC_COMPARE_TOOLTIP_NEQ = '만약 두 값이 서로 다르면 참을 반환합니다.';
    Blockly.Msg.LANG_LOGIC_COMPARE_TRANSLATED_NAME = '동일한 식';
    Blockly.Msg.LANG_LOGIC_COMPARE_EQ = '=';
    Blockly.Msg.LANG_LOGIC_COMPARE_NEQ = '≠';
    Blockly.Msg.LANG_LOGIC_OPERATION_HELPURL_AND = 'http://appinventor.mit.edu/explore/ai2/support/blocks/logic#and';
    Blockly.Msg.LANG_LOGIC_OPERATION_HELPURL_OR = 'http://appinventor.mit.edu/explore/ai2/support/blocks/logic#or';
    Blockly.Msg.LANG_LOGIC_OPERATION_AND = '그리고';
    Blockly.Msg.LANG_LOGIC_OPERATION_OR = '또는';
    Blockly.Msg.LANG_LOGIC_OPERATION_TOOLTIP_AND = '만약 모든 입력값이 참이면 참을 반환합니다.';
    Blockly.Msg.LANG_LOGIC_OPERATION_TOOLTIP_OR = '만약 하나 이상의 값이 참이면 참을 반환합니다.';
    Blockly.Msg.LANG_LOGIC_NEGATE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/logic#not';
    Blockly.Msg.LANG_LOGIC_NEGATE_INPUT_NOT = '아니다';
    Blockly.Msg.LANG_LOGIC_NEGATE_TOOLTIP = '만약 입력값이 거짓이면 참을 반환합니다.\n 만약 입력값이 참이면 거짓을 반환합니다.';
    Blockly.Msg.LANG_LOGIC_BOOLEAN_TRUE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/logic#true';
    Blockly.Msg.LANG_LOGIC_BOOLEAN_FALSE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/logic#false';
    Blockly.Msg.LANG_LOGIC_BOOLEAN_TRUE = '참';
    Blockly.Msg.LANG_LOGIC_BOOLEAN_FALSE = '거짓';
    Blockly.Msg.LANG_LOGIC_BOOLEAN_TOOLTIP_TRUE = '불린값 참(true)을 반환합니다.';
    Blockly.Msg.LANG_LOGIC_BOOLEAN_TOOLTIP_FALSE = '불린값 거짓(false)을 반환합니다.';
    Blockly.Msg.LANG_CATEGORY_MATH = '수학';
    Blockly.Msg.LANG_MATH_NUMBER_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#number';
    Blockly.Msg.LANG_MATH_NUMBER_TOOLTIP = '빈칸에 입력한 숫자를 값으로 사용합니다.';
    Blockly.Msg.LANG_MATH_MUTATOR_ITEM_INPUT_NUMBER = '숫자';
    Blockly.Msg.LANG_MATH_COMPARE_HELPURL = '';
    Blockly.Msg.LANG_MATH_COMPARE_HELPURL_EQ = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#=';
    Blockly.Msg.LANG_MATH_COMPARE_HELPURL_NEQ = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#not=';
    Blockly.Msg.LANG_MATH_COMPARE_HELPURL_LT = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#lt';
    Blockly.Msg.LANG_MATH_COMPARE_HELPURL_LTE = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#lte';
    Blockly.Msg.LANG_MATH_COMPARE_HELPURL_GT = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#gt';
    Blockly.Msg.LANG_MATH_COMPARE_HELPURL_GTE = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#gte';
    Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_EQ = '만약 두 수가 서로 같으면 참을 반환합니다.';
    Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_NEQ = '만약 두 수가 서로 다르면 참을 반환합니다.';
    Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_LT = '만약 앞의 수가 뒤의 수보다 작으면\n 참을 반환합니다.';
    Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_LTE = '만약 앞의 수가 뒤의 수보다 작거나 같으면\n 참을 반환합니다.';
    Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_GT = '만약 앞의 수가 뒤의 수보다 크면\n 참을 반환합니다.';
    Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_GTE = '만약 앞의 수가 뒤의 수보다 크거나 같으면\n 참을 반환합니다.';
    Blockly.Msg.LANG_MATH_COMPARE_EQ = '=';
    Blockly.Msg.LANG_MATH_COMPARE_NEQ = '≠';
    Blockly.Msg.LANG_MATH_COMPARE_LT = '<';
    Blockly.Msg.LANG_MATH_COMPARE_LTE = '≤';
    Blockly.Msg.LANG_MATH_COMPARE_GT = '>';
    Blockly.Msg.LANG_MATH_COMPARE_GTE = '≥';
    Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_ADD = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#add';
    Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_MINUS = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#subtract';
    Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_MULTIPLY = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#multiply';
    Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_DIVIDE = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#divide';
    Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_POWER = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#exponent';
    Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_ADD = '두 수를 더한 값을 반환합니다.';
    Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_MINUS = '두 수를 뺀 값을 반환합니다.';
    Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_MULTIPLY = '두 수를 곱한 값을 반환합니다.';
    Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_DIVIDE = '두 수를 나눈 값을 반환합니다.';
    Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_POWER = '앞의 수를 뒤의 수만큼 제곱한 값을\n 반환합니다.';
    Blockly.Msg.LANG_MATH_ARITHMETIC_ADD = '+';
    Blockly.Msg.LANG_MATH_ARITHMETIC_MINUS = '-';
    Blockly.Msg.LANG_MATH_ARITHMETIC_MULTIPLY = '*';
    Blockly.Msg.LANG_MATH_ARITHMETIC_DIVIDE = '/';
    Blockly.Msg.LANG_MATH_ARITHMETIC_POWER = '^';
    Blockly.Msg.LANG_MATH_SINGLE_OP_ROOT = '제곱근';
    Blockly.Msg.LANG_MATH_SINGLE_OP_ABSOLUTE = '절대값';
    Blockly.Msg.LANG_MATH_SINGLE_OP_NEG = '음수';
    Blockly.Msg.LANG_MATH_SINGLE_OP_LN = '로그';
    Blockly.Msg.LANG_MATH_SINGLE_OP_EXP = 'e^';
    Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_ROOT = '해당 숫자의 제곱근을 반환합니다.';
    Blockly.Msg.LANG_MATH_SINGLE_HELPURL_ROOT = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#sqrt';
    Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_ABS = '해당 숫자의 절대값을 반환합니다.';
    Blockly.Msg.LANG_MATH_SINGLE_HELPURL_ABS = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#abs';
    Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_NEG = '해당 숫자의 음수를 반환합니다.';
    Blockly.Msg.LANG_MATH_SINGLE_HELPURL_NEG = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#neg';
    Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_LN = '해당 숫자의 자연 로그값을 반환합니다. 즉, 밑이 e(2.71828…)인 로그값을 반환합니다.';
    Blockly.Msg.LANG_MATH_SINGLE_HELPURL_LN = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#log';
    Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_EXP = '해당 숫자의 e (2.71828…) 거듭제곱값을 반환합니다.';
    Blockly.Msg.LANG_MATH_SINGLE_HELPURL_EXP = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#e';
    Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_ROUND = '해당 숫자를 반올림합니다.';
    Blockly.Msg.LANG_MATH_ROUND_HELPURL_ROUND = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#round';
    Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_CEILING = '해당 숫자를 올림합니다.';
    Blockly.Msg.LANG_MATH_ROUND_HELPURL_CEILING = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#ceiling';
    Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_FLOOR = '해당 숫자를 내림합니다.';
    Blockly.Msg.LANG_MATH_ROUND_HELPURL_FLOOR = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#floor';
    Blockly.Msg.LANG_MATH_ROUND_OPERATOR_ROUND = '반올림';
    Blockly.Msg.LANG_MATH_ROUND_OPERATOR_CEILING = '올림';
    Blockly.Msg.LANG_MATH_ROUND_OPERATOR_FLOOR = '내림';
    Blockly.Msg.LANG_MATH_TRIG_SIN = 'sin';
    Blockly.Msg.LANG_MATH_TRIG_COS = 'cos';
    Blockly.Msg.LANG_MATH_TRIG_TAN = 'tan';
    Blockly.Msg.LANG_MATH_TRIG_ASIN = 'asin';
    Blockly.Msg.LANG_MATH_TRIG_ACOS = 'acos';
    Blockly.Msg.LANG_MATH_TRIG_ATAN = 'atan';
    Blockly.Msg.LANG_MATH_TRIG_ATAN2 = 'atan2';
    Blockly.Msg.LANG_MATH_TRIG_ATAN2_X = 'x';
    Blockly.Msg.LANG_MATH_TRIG_ATAN2_Y = 'y';
    Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_SIN = '주어진 각도의 사인(sine) 값으로 변환합니다.';
    Blockly.Msg.LANG_MATH_TRIG_HELPURL_SIN = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#sin';
    Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_COS = '주어진 각도의 코사인(cosine) 값으로 변환합니다.';
    Blockly.Msg.LANG_MATH_TRIG_HELPURL_COS = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#cos';
    Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_TAN = '주어진 각도의 탄젠트(tangent) 값으로 변환합니다.';
    Blockly.Msg.LANG_MATH_TRIG_HELPURL_TAN = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#tan';
    Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ASIN = '주어진 사인(sine) 값을 가지게 되는 각도로 변환합니다.\n 반환되는 각도 범위는 (-90, +90] 입니다.';
    Blockly.Msg.LANG_MATH_TRIG_HELPURL_ASIN = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#asin';
    Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ACOS = '주어진 코사인(cosine) 값을 가지게 되는 각도로 변환합니다.\n 변환되는 각도 범위는 [0, 180) 입니다.';
    Blockly.Msg.LANG_MATH_TRIG_HELPURL_ACOS = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#acos';
    Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ATAN = '주어진 탄젠트(tangent) 값을 가지게 되는 각도로 변환합니다.\n 변환되는 각도 범위는 (-90, +90) 입니다.';
    Blockly.Msg.LANG_MATH_TRIG_HELPURL_ATAN = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#atan';
    Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ATAN2 = '주어진 두 값이 직각좌표(y/x)를 이루게 되는 각도를 반환합니다.\n 반환되는 각도 범위는 (-180, +180] 입니다.';
    Blockly.Msg.LANG_MATH_TRIG_HELPURL_ATAN2 = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#atan2';
    Blockly.Msg.LANG_MATH_ONLIST_OPERATOR_MIN = '최솟값';
    Blockly.Msg.LANG_MATH_ONLIST_OPERATOR_MAX = '최댓값';
    Blockly.Msg.LANG_MATH_DIVIDE = '÷';
    Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_MODULO = '모듈로';
    Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_REMAINDER = '나머지';
    Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_QUOTIENT = '몫';
    Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_MODULO = '모듈로를 반환합니다.';
    Blockly.Msg.LANG_MATH_DIVIDE_HELPURL_MODULO = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#modulo';
    Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_REMAINDER = '나머지를 반환합니다.';
    Blockly.Msg.LANG_MATH_DIVIDE_HELPURL_REMAINDER = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#remainder';
    Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_QUOTIENT = '몫을 반환합니다.';
    Blockly.Msg.LANG_MATH_DIVIDE_HELPURL_QUOTIENT = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#quotient';
    Blockly.Msg.LANG_MATH_RANDOM_INT_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#randomint';
    Blockly.Msg.LANG_MATH_RANDOM_INT_TITLE_RANDOM = '임의의 정수';
    Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT_FROM = '시작';
    Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT_TO = '끝';
    Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT = '임의의 정수 시작 %1 끝 %2';
    Blockly.Msg.LANG_MATH_RANDOM_INT_TOOLTIP = '주어진 범위 내의 임의의 정수를 반환합니다.\n 최대 범위는 2**30보다 작은 수로 자동으로 변환됩니다.';
    Blockly.Msg.LANG_MATH_RANDOM_FLOAT_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#randomfrac';
    Blockly.Msg.LANG_MATH_RANDOM_FLOAT_TITLE_RANDOM = '임의의 분수';
    Blockly.Msg.LANG_MATH_RANDOM_FLOAT_TOOLTIP = '0부터 1사이의 임의의 수를 반환합니다.';
    Blockly.Msg.LANG_MATH_RANDOM_SEED_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#randomseed';
    Blockly.Msg.LANG_MATH_RANDOM_SEED_TITLE_RANDOM = '난수 시드 지정하기';
    Blockly.Msg.LANG_MATH_RANDOM_SEED_INPUT_TO = '시드';
    Blockly.Msg.LANG_MATH_RANDOM_SEED_TOOLTIP = '난수 생성기의 시드를 지정합니다.';
    Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TITLE_CONVERT = '변환';
    Blockly.Msg.LANG_MATH_CONVERT_ANGLES_OP_RAD_TO_DEG = '라디안을 각도로';
    Blockly.Msg.LANG_MATH_CONVERT_ANGLES_OP_DEG_TO_RAD = '각도를 라디안으로';
    Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TOOLTIP_RAD_TO_DEG = '해당 라디안값에 대응되는 [0, 360) 범위의 각도값을 반환합니다.';
    Blockly.Msg.LANG_MATH_CONVERT_ANGLES_HELPURL_RAD_TO_DEG = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#convertrad';
    Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TOOLTIP_DEG_TO_RAD = '해당 각도값에 대응되는 [-π, +π) 범위의 라디안값을 반환합니다.';
    Blockly.Msg.LANG_MATH_CONVERT_ANGLES_HELPURL_DEG_TO_RAD = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#convertdeg';
    Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#format';
    Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_TITLE = '소수로 나타내기';
    Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT_NUM = '숫자';
    Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT_PLACES = '자릿수';
    Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT = '소수로 나타내기 숫자 %1 자릿수 %2';
    Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_TOOLTIP = '주어진 소수점 이하의 자릿수까지 나타내는 형태로 반환합니다.';
    Blockly.Msg.LANG_MATH_IS_A_NUMBER_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#isnumber';
    Blockly.Msg.LANG_MATH_IS_A_NUMBER_INPUT_NUM = '숫자인가요?';
    Blockly.Msg.LANG_MATH_IS_A_NUMBER_TOOLTIP = '주어진 값이 숫자인지 검사합니다.';
    Blockly.Msg.LANG_MATH_IS_A_DECIMAL_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#isnumber';
    Blockly.Msg.LANG_MATH_IS_A_DECIMAL_INPUT_NUM = '10진수인가요?';
    Blockly.Msg.LANG_MATH_IS_A_DECIMAL_TOOLTIP = '주어진 값이 양의 10진수를 나타내는 문자열인지 검사합니다.';
    Blockly.Msg.LANG_MATH_IS_A_HEXADECIMAL_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#isnumber';
    Blockly.Msg.LANG_MATH_IS_A_HEXADECIMAL_INPUT_NUM = '16진수인가요?';
    Blockly.Msg.LANG_MATH_IS_A_HEXADECIMAL_TOOLTIP = '주어진 값이 16진수를 나타내는 문자열인지 검사합니다.';
    Blockly.Msg.LANG_MATH_IS_A_BINARY_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#isnumber';
    Blockly.Msg.LANG_MATH_IS_A_BINARY_INPUT_NUM = '2진수인가요?';
    Blockly.Msg.LANG_MATH_IS_A_BINARY_TOOLTIP = '주어진 값이 2진수를 나타내는 문자열인지 검사합니다.';
    Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TITLE_CONVERT = '진법 바꾸기';
    Blockly.Msg.LANG_MATH_CONVERT_NUMBER_OP_DEC_TO_HEX = '10진수를 16진수로';
    Blockly.Msg.LANG_MATH_CONVERT_NUMBER_HELPURL_DEC_TO_HEX = '';
    Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TOOLTIP_DEC_TO_HEX = '10진수인 양의 정수를 16진수로 변환한 문자열을 반환합니다.';
    Blockly.Msg.LANG_MATH_CONVERT_NUMBER_OP_HEX_TO_DEC = '16진수를 10진수로';
    Blockly.Msg.LANG_MATH_CONVERT_NUMBER_HELPURL_HEX_TO_DEC = '';
    Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TOOLTIP_HEX_TO_DEC = '16진수를 나타내는 문자열을 10진수로 변환한 문자열을 반환합니다.';
    Blockly.Msg.LANG_MATH_CONVERT_NUMBER_OP_DEC_TO_BIN = '10진수를 2진수로';
    Blockly.Msg.LANG_MATH_CONVERT_NUMBER_HELPURL_DEC_TO_BIN = '';
    Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TOOLTIP_DEC_TO_BIN = '10진수인 양의 정수를 2진수로 변환한 문자열을 반환합니다.';
    Blockly.Msg.LANG_MATH_CONVERT_NUMBER_OP_BIN_TO_DEC = '2진수를 10진수로';
    Blockly.Msg.LANG_MATH_CONVERT_NUMBER_HELPURL_BIN_TO_DEC = '';
    Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TOOLTIP_BIN_TO_DEC = '2진수를 나타내는 문자열을 10진수로 변환한 문자열을 반환합니다.';
    Blockly.Msg.LANG_CATEGORY_TEXT = '텍스트';
    Blockly.Msg.LANG_TEXT_TEXT_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/text#string';
    Blockly.Msg.LANG_TEXT_TEXT_TOOLTIP = '빈칸에 입력한 텍스트 문자열을 사용하게 됩니다.';
    Blockly.Msg.LANG_TEXT_TEXT_LEFT_QUOTE = '"';
    Blockly.Msg.LANG_TEXT_TEXT_RIGHT_QUOTE = '"';
    Blockly.Msg.LANG_TEXT_JOIN_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/text#join';
    Blockly.Msg.LANG_TEXT_JOIN_TITLE_CREATEWITH = '텍스트 만들기';
    Blockly.Msg.LANG_TEXT_JOIN_TOOLTIP = '모든 입력들을 하나의 텍스트 문자열로 합칩니다.\n 만약 아무런 입력값이 없다면, 빈 텍스트를 만듭니다.';
    Blockly.Msg.LANG_TEXT_JOIN_TITLE_JOIN = '합치기';
    Blockly.Msg.LANG_TEXT_JOIN_ITEM_TITLE_ITEM = '문자열';
    Blockly.Msg.LANG_TEXT_JOIN_ITEM_TOOLTIP = '';
    Blockly.Msg.LANG_TEXT_APPEND_HELPURL = 'http://www.liv.ac.uk/HPC/HTMLF90Course/HTMLF90CourseNotesnode91.html';
    Blockly.Msg.LANG_TEXT_APPEND_TO = '~에';
    Blockly.Msg.LANG_TEXT_APPEND_APPENDTEXT = '텍스트 추가하기';
    Blockly.Msg.LANG_TEXT_APPEND_VARIABLE = '항목';
    Blockly.Msg.LANG_TEXT_APPEND_TOOLTIP = '텍스트를 변수 "%1"에 붙이기.';
    Blockly.Msg.LANG_TEXT_LENGTH_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/text#length';
    Blockly.Msg.LANG_TEXT_LENGTH_INPUT_LENGTH = '길이';
    Blockly.Msg.LANG_TEXT_LENGTH_TOOLTIP = '주어진 텍스트를 구성하고 있는 문자 갯수(스페이스 포함)를 반환합니다.';
    Blockly.Msg.LANG_TEXT_ISEMPTY_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/text#isempty';
    Blockly.Msg.LANG_TEXT_ISEMPTY_INPUT_ISEMPTY = '비어있나요?';
    Blockly.Msg.LANG_TEXT_ISEMPTY_TOOLTIP = '텍스트 길이가 0이면 참을, 그렇지 않으면 거짓을 반환합니다.';
    Blockly.Msg.LANG_TEXT_COMPARE_LT = ' <';
    Blockly.Msg.LANG_TEXT_COMPARE_EQUAL = ' =';
    Blockly.Msg.LANG_TEXT_COMPARE_GT = ' >';
    Blockly.Msg.LANG_TEXT_COMPARE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/text#compare';
    Blockly.Msg.LANG_TEXT_COMPARE_INPUT_COMPARE = '텍스트 비교하기';
    Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_LT = '텍스트1이 텍스트2보다 사전 순서 상 작은지 검사합니다.\n 만약 한 텍스트가 다른 텍스트의 접두사이면, 더 짧은 텍스트가 작은 것으로 간주됩니다. 대문자는 소문자보다 큽니다.';
    Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_EQUAL = '텍스트 문자열이 동일한지 검사합니다.\n 즉, 똑같은 문자들이 똑같은 순서인지 확인합니다. 이는 보통의 = 와는 다릅니다.\n 예를 들어 텍스트 문자열이 숫자인 경우: 123과 0123은 = 이지만\n 텍스트로서는 =. 입니다.';
    Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_GT = '텍스트1이 텍스트2보다 사전 순서 상 큰지 검사합니다.\n 만약 한 텍스트가 다른 텍스트의 접두사이면, 더 짧은 텍스트가 작은 것으로 간주됩니다. 대문자는 소문자보다 큽니다.';
    Blockly.Msg.LANG_TEXT_TEXT_OBFUSCATE_TOOLTIP = '입력된 텍스트를 읽기 어려운 형태의 새로운 텍스트 블록으로 만듭니다. \n 이는 앱에 보안이 중요한 정보를 포함하여 배포해야 할 때 사용하세요. 예를 들면 API 키 같은 경우에요. \n 경고: 전문가 수준에서는 매우 낮은 수준의 보안만 제공합니다.';
    Blockly.Msg.LANG_TEXT_TEXT_OBFUSCATE = '텍스트 난독화';
    Blockly.Msg.LANG_TEXT_TEXT_OBFUSCATE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/text#obfuscatetext';
    Blockly.Msg.LANG_TEXT_CHANGECASE_OPERATOR_UPPERCASE = '대문자';
    Blockly.Msg.LANG_TEXT_CHANGECASE_OPERATOR_DOWNCASE = '소문자';
    Blockly.Msg.LANG_TEXT_CHANGECASE_TOOLTIP_UPPERCASE = '대문자로 변환한 텍스트 문자열의 복사본을 반환합니다.';
    Blockly.Msg.LANG_TEXT_CHANGECASE_HELPURL_UPPERCASE = 'http://appinventor.mit.edu/explore/ai2/support/blocks/text#upcase';
    Blockly.Msg.LANG_TEXT_CHANGECASE_TOOLTIP_DOWNCASE = '소문자로 변환한 텍스트 문자열의 복사본을 반환합니다.';
    Blockly.Msg.LANG_TEXT_CHANGECASE_HELPURL_DOWNCASE = 'http://appinventor.mit.edu/explore/ai2/support/blocks/text#downcase';
    Blockly.Msg.LANG_TEXT_TRIM_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/text#trim';
    Blockly.Msg.LANG_TEXT_TRIM_TITLE_TRIM = '다듬기';
    Blockly.Msg.LANG_TEXT_TRIM_TOOLTIP = '시작과 끝의 띄어쓰기를 모두 제거한\n 텍스트 문자열의 복사본을 반환합니다.';
    Blockly.Msg.LANG_TEXT_STARTS_AT_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/text#startsat';
    Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_STARTS_AT = '위치 찾기';
    Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_TEXT = '텍스트';
    Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_PIECE = '조각';
    Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT = '~에서 시작하기  텍스트 %1 조각 %2';
    Blockly.Msg.LANG_TEXT_STARTS_AT_TOOLTIP = '입력 받은 텍스트에서 해당 조각이 시작하는 위치(인덱스)를 반환합니다.\n 인덱스 1은 텍스트의 시작 위치를 의미합니다. 만약 텍스트에 해당 조각이 포함되지 않으면\n 0을 반환합니다.';
    Blockly.Msg.LANG_TEXT_CONTAINS_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/text#contains';
    Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_CONTAINS = '포함';
    Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_TEXT = '텍스트';
    Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_PIECE = '조각';
    Blockly.Msg.LANG_TEXT_CONTAINS_INPUT = '포함 텍스트 %1 조각 %2';
    Blockly.Msg.LANG_TEXT_CONTAINS_TOOLTIP = '텍스트가 해당 조각을 포함하고 있는지 검사합니다.';
    Blockly.Msg.LANG_TEXT_SPLIT_HELPURL = '';
    Blockly.Msg.LANG_TEXT_SPLIT_INPUT_TEXT = '텍스트';
    Blockly.Msg.LANG_TEXT_SPLIT_INPUT_AT = '구분';
    Blockly.Msg.LANG_TEXT_SPLIT_INPUT_AT_LIST = '구분 (리스트)';
    Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_FIRST = '처음 일치하는 위치 분할';
    Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_FIRST_OF_ANY = '리스트 처음 일치하는 위치 분할';
    Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT = '분할';
    Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_ANY = '일치하는 모든 위치 분할';
    Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_FIRST = '주어진 텍스트를 \'구분\' 텍스트가 처음으로 일치하는 위치를 기준으로 두 개의 조각으로 나눕니다.\n 그리고 나누는 기준 점 앞과 뒤로 이루어진 두 조각의 텍스트를 가지는 리스트를 반환합니다 \n "apple.banana.cherry.dogfood"를 콤마를 구분 기준으로 나누면 \n 다음과 같은 두 개의 항목으로 이루어진 리스트를 반환합니다: 첫 번째 텍스트 "apple", 두 번째 텍스트 "banana,cherry,dogfood".';
    Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT_AT_FIRST = 'http://appinventor.mit.edu/explore/ai2/support/blocks/text#splitat';
    Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_FIRST_OF_ANY = '주어진 텍스트를 \'구분\' 리스트 항목 중 아무거나 처음으로 일치하는 위치를 기준으로 두 개의 항목을 가진 리스트로 나눕니다. \n\n "I love apples bananas apples grapes"를 리스트 "(ba ap)"로 나누면\n 첫 번째는 "I love"이고 두 번째는 "ples bananas apples grapes"인 리스트를 반환합니다';
    Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT_AT_FIRST_OF_ANY = 'http://appinventor.mit.edu/explore/ai2/support/blocks/text#splitatfirstofany';
    Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT = '주어진 텍스트를 \'구분\' 텍스트를 사용하여 일치하는 모든 점들을 나누어 결과 리스트를 만듭니다.  \n "one,two,three,four\"를 "," (콤마) 로 분할하면 "(one two three four)" 리스트를 반환합니다. \n "one-potato,two-potato,three-potato,four"를 "-potato,"로 분할하면 "(one two three four)" 리스트를 반환합니다.';
    Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT = 'http://appinventor.mit.edu/explore/ai2/support/blocks/text#split';
    Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_ANY = '주어진 텍스트를 \'구분\' 리스트와 일치하는 위치들을 모두 나누어 결과를 리스트로 반환합니다. \n "appleberry,banana,cherry,dogfood"를 첫 번째 항목은 콤마, 두 번째 항목은 "rry"인 \'구분\' 리스트로 분할을 하면\n 다음 네개의 항목을 가지는 리스트를 반환합니다: \n "(applebe banana che dogfood)".';
    Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT_AT_ANY = 'http://appinventor.mit.edu/explore/ai2/support/blocks/text#splitatany';
    Blockly.Msg.LANG_TEXT_SPLIT_AT_SPACES_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/text#splitspaces';
    Blockly.Msg.LANG_TEXT_SPLIT_AT_SPACES_TITLE = '빈 칸으로 분할';
    Blockly.Msg.LANG_TEXT_SPLIT_AT_TOOLTIP = '텍스트를 빈 칸으로 구분하여 분할합니다.';
    Blockly.Msg.LANG_TEXT_SEGMENT_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/text#segment';
    Blockly.Msg.LANG_TEXT_SEGMENT_TITLE_SEGMENT = '부분';
    Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_START = '시작';
    Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_LENGTH = '길이';
    Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_TEXT = '텍스트';
    Blockly.Msg.LANG_TEXT_SEGMENT_INPUT = '부분  텍스트 %1 시작 %2 길이 %3';
    Blockly.Msg.LANG_TEXT_SEGMENT_AT_TOOLTIP = '주어진 텍스트에서 "시작" 위치부터 "길이" 값 만큼의 텍스트 일부분을 추출합니다.\n 텍스트의 시작 위치는 1입니다.';
    Blockly.Msg.LANG_TEXT_REPLACE_ALL_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/text#replaceall';
    Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_SEGMENT = '부분';
    Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_TEXT = '텍스트';
    Blockly.Msg.LANG_TEXT_REPLACE_ALL_TITLE_REPLACE_ALL = '모두 교체하기';
    Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_REPLACEMENT = '교체';
    Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT = '모두 교체하기 %1 부분 %2 교체 %3';
    Blockly.Msg.LANG_TEXT_REPLACE_ALL_TOOLTIP = '"부분"과 일치하는 모든 항목을 "교체"로 바꾼 새로운 텍스트를 반환합니다.';
    Blockly.Msg.LANG_CATEGORY_LISTS = '리스트';
    Blockly.Msg.LANG_LISTS_CREATE_EMPTY_TITLE = '빈 리스트 만들기';
    Blockly.Msg.LANG_LISTS_CREATE_WITH_EMPTY_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#makealist';
    Blockly.Msg.LANG_LISTS_CREATE_WITH_TITLE_MAKE_LIST = '리스트 만들기';
    Blockly.Msg.LANG_LISTS_CREATE_WITH_TOOLTIP = '여러 개의 항목을 가진 리스트를 만듭니다.';
    Blockly.Msg.LANG_LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = '리스트';
    Blockly.Msg.LANG_LISTS_CREATE_WITH_CONTAINER_TOOLTIP = '추가 또는 삭제하거나 순서를 바꾸어 리스트 블록을 재설정합니다.';
    Blockly.Msg.LANG_LISTS_CREATE_WITH_ITEM_TITLE = '항목';
    Blockly.Msg.LANG_LISTS_CREATE_WITH_ITEM_TOOLTIP = '항목을 리스트에 추가합니다.';
    Blockly.Msg.LANG_LISTS_ADD_ITEM_TITLE = '항목';
    Blockly.Msg.LANG_LISTS_ADD_ITEM_TOOLTIP = '항목을 리스트에 추가합니다.';
    Blockly.Msg.LANG_LISTS_ADD_ITEM_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#additems';
    Blockly.Msg.LANG_LISTS_SELECT_ITEM_TITLE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#selectlistitem';
    Blockly.Msg.LANG_LISTS_SELECT_ITEM_TITLE_SELECT = '리스트에서 항목 선택하기';
    Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT_LIST = '리스트';
    Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT_INDEX = '위치';
    Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT = '리스트에서 항목 선택하기  리스트 %1 위치 %2';
    Blockly.Msg.LANG_LISTS_SELECT_ITEM_TOOLTIP = '리스트 안에서 해당 위치에 있는 값을 반환합니다.';
    Blockly.Msg.LANG_LISTS_IS_IN_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#inlist';
    Blockly.Msg.LANG_LISTS_IS_IN_TITLE_IS_IN = '리스트안에 있나요?';
    Blockly.Msg.LANG_LISTS_IS_IN_INPUT_THING = '값';
    Blockly.Msg.LANG_LISTS_IS_IN_INPUT_LIST = '리스트';
    Blockly.Msg.LANG_LISTS_IS_IN_INPUT = '리스트에 포함되어 있나요? 값 %1 리스트 %2';
    Blockly.Msg.LANG_LISTS_IS_IN_TOOLTIP = '리스트가 해당 값을 포함하고 있으면 참을 반환하고, 그렇지 않으면 거짓을 반환합니다.';
    Blockly.Msg.LANG_LISTS_POSITION_IN_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#indexinlist';
    Blockly.Msg.LANG_LISTS_POSITION_IN_TITLE_POSITION = '리스트에서의 위치';
    Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT_THING = '값';
    Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT_LIST = '리스트';
    Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT = '리스트에서의 위치  값 %1 리스트 %2';
    Blockly.Msg.LANG_LISTS_POSITION_IN_TOOLTIP = '리스트 안에서 해당 값이 몇 번째에 위치하고 있는지 찾아서 그 값을 반환합니다. 만약 리스트에 해당 값이 없다면, 0을 반환합니다.';
    Blockly.Msg.LANG_LISTS_PICK_RANDOM_ITEM_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#pickrandomitem';
    Blockly.Msg.LANG_LISTS_PICK_RANDOM_TITLE_PICK_RANDOM = '임의의 항목 선택하기';
    Blockly.Msg.LANG_LISTS_PICK_RANDOM_ITEM_INPUT_LIST = '리스트';
    Blockly.Msg.LANG_LISTS_PICK_RANDOM_TOOLTIP = '리스트에서 임의의 항목을 선택합니다.';
    Blockly.Msg.LANG_LISTS_REPLACE_ITEM_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#replace';
    Blockly.Msg.LANG_LISTS_REPLACE_ITEM_TITLE_REPLACE = '리스트의 항목 교체하기';
    Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_LIST = '리스트';
    Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_INDEX = '목록';
    Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_REPLACEMENT = '교체';
    Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT = '리스트의 항목 교체하기  리스트 %1 위치 %2 교체 %3';
    Blockly.Msg.LANG_LISTS_REPLACE_ITEM_TOOLTIP = '리스트에서 해당 위치의 항목을 교체하고자 하는 항목으로 변경합니다.';
    Blockly.Msg.LANG_LISTS_REMOVE_ITEM_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#removeitem';
    Blockly.Msg.LANG_LISTS_REMOVE_ITEM_TITLE_REMOVE = '리스트에서 항목 삭제하기';
    Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT_LIST = '리스트';
    Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT_INDEX = '목록';
    Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT = '리스트에서 항목 삭제하기  리스트 %1 위치 %2';
    Blockly.Msg.LANG_LISTS_REMOVE_ITEM_TOOLTIP = '리스트의 지정된 위치에 있는 항목을 삭제합니다.';
    Blockly.Msg.LANG_LISTS_LENGTH_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#lengthoflist';
    Blockly.Msg.LANG_LISTS_LENGTH_INPUT_LENGTH = '리스트 길이';
    Blockly.Msg.LANG_LISTS_LENGTH_INPUT_LIST = '리스트';
    Blockly.Msg.LANG_LISTS_LENGTH_INPUT = '리스트 길이 리스트 %1';
    Blockly.Msg.LANG_LISTS_LENGTH_TOOLTIP = '리스트에 몇 개의 항목이 있는지 세어 그 값을 반환합니다.';
    Blockly.Msg.LANG_LISTS_APPEND_LIST_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#append';
    Blockly.Msg.LANG_LISTS_APPEND_LIST_TITLE_APPEND = '리스트 붙이기';
    Blockly.Msg.LANG_LISTS_APPEND_LIST_INPUT_LIST1 = '리스트1';
    Blockly.Msg.LANG_LISTS_APPEND_LIST_INPUT_LIST2 = '리스트2';
    Blockly.Msg.LANG_LISTS_APPEND_LIST_INPUT = '리스트 붙이기  리스트1 %1 리스트2 %2';
    Blockly.Msg.LANG_LISTS_APPEND_LIST_TOOLTIP = '리스트1의 맨 끝에 리스트2의 모든 항목을 가져다 붙입니다. 추가한 다음에는, 리스트1 은 추가된 모든 항목들을 포함하게 되고, 리스트2는 아무것도 바뀌지 않습니다.';
    Blockly.Msg.LANG_LISTS_ADD_ITEMS_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#additems';
    Blockly.Msg.LANG_LISTS_ADD_ITEMS_TITLE_ADD = '리스트에 항목 추가하기';
    Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT_LIST = '리스트';
    Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT_ITEM = '항목';
    Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT = '리스트에 항목 추가 리스트 %1 항목 %2';
    Blockly.Msg.LANG_LISTS_ADD_ITEMS_TOOLTIP = '리스트 마지막에 항목 추가하세요';
    Blockly.Msg.LANG_LISTS_ADD_ITEMS_CONTAINER_TITLE_ADD = '리스트';
    Blockly.Msg.LANG_LISTS_ADD_ITEMS_CONTAINER_TOOLTIP = '추가, 삭제 또는 리스트 블록 재구성을 위한 섹션 재정렬하기';
    Blockly.Msg.LANG_LISTS_COPY_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#copy';
    Blockly.Msg.LANG_LISTS_COPY_TITLE_COPY = '리스트 복사하기';
    Blockly.Msg.LANG_LISTS_COPY_INPUT_LIST = '리스트';
    Blockly.Msg.LANG_LISTS_COPY_TOOLTIP = '모든 하위 리스트 복사를 포함하여 리스트 복사본 만들기';
    Blockly.Msg.LANG_LISTS_IS_LIST_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#isalist';
    Blockly.Msg.LANG_LISTS_IS_LIST_TITLE_IS_LIST = '리스트인가요?';
    Blockly.Msg.LANG_LISTS_IS_LIST_INPUT_THING = '값';
    Blockly.Msg.LANG_LISTS_IS_LIST_TOOLTIP = '리스트인지 검사합니다.';
    Blockly.Msg.LANG_LISTS_TO_CSV_ROW_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#listtocsvrow';
    Blockly.Msg.LANG_LISTS_TO_CSV_ROW_TITLE_TO_CSV = '리스트를 csv 행으로 바꾸기';
    Blockly.Msg.LANG_LISTS_TO_CSV_ROW_INPUT_LIST = '리스트';
    Blockly.Msg.LANG_LISTS_TO_CSV_ROW_TOOLTIP = '해당 리스트를 테이블의 행을 나타내는 CSV (콤마로 구분된 값) 텍스트로 변환합니다. 행 목록의 각 항목들은 하나의 필드로 간주되어 쌍따옴표로 구분되어 표시됩니다. 그리고 각 항목들은 콤마로 나누어집니다. 반환된 행 텍스트는 맨 끝에 줄 바꿈 표시를 포함하고 있지 않습니다.';
    Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#listfromcsvrow';
    Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_TITLE_FROM_CSV = 'csv 행을 리스트로 바꾸기';
    Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_INPUT_TEXT = '텍스트';
    Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_TOOLTIP = 'CSV (콤마로 구분된 값) 형태의 텍스트를 리스트로 변환합니다. 행 텍스트가 이스케이프 되지 않은 새 라인을 필드에 포함하고 있다면 (쉽게 말해, 다중 라인이면) 오류가 발생합니다. 행 텍스트가 단일 새 라인이거나 CRLF로 끝나는 것은 괜찮습니다.';
    Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#listtocsvtable';
    Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_TITLE_TO_CSV = '리스트를 csv 표로 바꾸기';
    Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_INPUT_LIST = '리스트';
    Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_TOOLTIP = '해당 리스트를 표를 나타내는 CSV (콤마로 구분된 값) 텍스트로 변환합니다. 리스트의 각 항목들은 CSV 표의 행 하나를 나타내는 리스트입니다. 행 리스트의 각 항목은 하나의 필드로 간주되어, 쌍따옴표로 구분됩니다. 반환된 텍스트에서 행의 항목들은 콤마로 나누어지며, 행은 CRLF (\\r\\n)로 구분됩니다.';
    Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#listfromcsvtable';
    Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_TITLE_FROM_CSV = 'csv 표를 리스트로 바꾸기';
    Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_INPUT_TEXT = '텍스트';
    Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_TOOLTIP = 'CSV (콤마로 구분된 값) 형식의 표를 나타내는 텍스트를 리스트로 변환합니다. 행은 새 라인 (\\n) 이나 CRLF (\\r\\n) 로 구분됩니다.';
    Blockly.Msg.LANG_LISTS_INSERT_ITEM_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#insert';
    Blockly.Msg.LANG_LISTS_INSERT_TITLE_INSERT_LIST = '리스트에 항목 추가하기';
    Blockly.Msg.LANG_LISTS_INSERT_INPUT_LIST = '리스트';
    Blockly.Msg.LANG_LISTS_INSERT_INPUT_INDEX = '목록';
    Blockly.Msg.LANG_LISTS_INSERT_INPUT_ITEM = '항목';
    Blockly.Msg.LANG_LISTS_INSERT_INPUT = '리스트에 항목 추가하기  리스트 %1 위치 %2 항목 %3';
    Blockly.Msg.LANG_LISTS_INSERT_TOOLTIP = '해당 항목을 지정된 위치의 리스트에 추가합니다.';
    Blockly.Msg.LANG_LISTS_IS_EMPTY_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#islistempty';
    Blockly.Msg.LANG_LISTS_TITLE_IS_EMPTY = '리스트가 비어있나요?';
    Blockly.Msg.LANG_LISTS_INPUT_LIST = '리스트';
    Blockly.Msg.LANG_LISTS_IS_EMPTY_TOOLTIP = '리스트가 비어있다면 참을 반환합니다.';
    Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#lookuppairs';
    Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_TITLE_LOOKUP_IN_PAIRS = '짝을 지어 찾기';
    Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_KEY = '키';
    Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_PAIRS = '쌍';
    Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_NOT_FOUND = '찾지 못함';
    Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT = '짝을 지어 찾기  키 %1 쌍 %2 찾지 못함 %3';
    Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_TOOLTIP = '쌍으로 된 리스트에서 키와 연관된 값을 찾아 반환합니다.';
    Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/variables#global';
    Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TITLE_INIT = '전역변수 초기화';
    Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_NAME = '변수 이름';
    Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TO = '값';
    Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_COLLAPSED_TEXT = '전역변수';
    Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TOOLTIP = '전역변수를 만들고 연결된 블록의 값을 해당 변수에 지정합니다.';
    Blockly.Msg.LANG_VARIABLES_GET_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/variables#global';
    Blockly.Msg.LANG_VARIABLES_GET_TITLE_GET = '가져오기';
    Blockly.Msg.LANG_VARIABLES_GET_COLLAPSED_TEXT = '가져오기';
    Blockly.Msg.LANG_VARIABLES_GET_TOOLTIP = '이 변수의 값을 반환합니다.';
    Blockly.Msg.LANG_VARIABLES_SET_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/variables#set';
    Blockly.Msg.LANG_VARIABLES_SET_TITLE_SET = '지정하기';
    Blockly.Msg.LANG_VARIABLES_SET_TITLE_TO = '값';
    Blockly.Msg.LANG_VARIABLES_SET_COLLAPSED_TEXT = '지정하기';
    Blockly.Msg.LANG_VARIABLES_SET_TOOLTIP = '이 변수에 입력값을 지정합니다.';
    Blockly.Msg.LANG_VARIABLES_VARIABLE = '변수';
    Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/variables#do';
    Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TITLE_INIT = '지역변수 초기화';
    Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_DEFAULT_NAME = '변수 이름';
    Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_INPUT_TO = '값';
    Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_IN_DO = '실행';
    Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_COLLAPSED_TEXT = '지역';
    Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TOOLTIP = '이 블럭의 \'실행\' 영역에서만 접근 가능한 변수를 만듭니다.';
    Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TRANSLATED_NAME = '실행할 때 지역변수 초기화하기';
    Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/variables#return';
    Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_IN_RETURN = '실행';
    Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_COLLAPSED_TEXT = '지역변수';
    Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_TOOLTIP = '이 블럭의 반환 영역에서만 접근가능한 변수를 만듭니다.';
    Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_TRANSLATED_NAME = '반환 시 지역변수를 초기화 하세요';
    Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_CONTAINER_TITLE_LOCAL_NAMES = '지역변수 이름';
    Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_CONTAINER_TOOLTIP = '';
    Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_ARG_TITLE_NAME = '이름';
    Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_ARG_DEFAULT_VARIABLE = 'x';
    Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#do';
    Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DEFINE = '함수';
    Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_PROCEDURE = '함수 이름';
    Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DO = '실행';
    Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_COLLAPSED_PREFIX = '함수 ';
    Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_TOOLTIP = '반환값을 가지지 않는 함수입니다.';
    Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#doreturn';
    Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_THEN_RETURN = '결과';
    Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_DO = '실행';
    Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_RETURN = '결과';
    Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_TOOLTIP = '\'실행\' 영역에 있는 블록을 실행하고 결과를 반환한다. 변수에 값을 반환하기 전에 함수를 실행해야 하는 경우 유용합니다.';
    Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_COLLAPSED_TEXT = '실행/결과';
    Blockly.Msg.LANG_PROCEDURES_DEFRETURN_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#return';
    Blockly.Msg.LANG_PROCEDURES_DEFRETURN_DEFINE = '함수';
    Blockly.Msg.LANG_PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_PROCEDURE;
    Blockly.Msg.LANG_PROCEDURES_DEFRETURN_DO = Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DO;
    Blockly.Msg.LANG_PROCEDURES_DEFRETURN_RETURN = '결과';
    Blockly.Msg.LANG_PROCEDURES_DEFRETURN_COLLAPSED_PREFIX = '함수 ';
    Blockly.Msg.LANG_PROCEDURES_DEFRETURN_TOOLTIP = '결과값을 반환하는 함수입니다.';
    Blockly.Msg.LANG_PROCEDURES_DEF_DUPLICATE_WARNING = '경고:\n이 함수는 \n중복된 입력값을 가지고 있습니다.';
    Blockly.Msg.LANG_PROCEDURES_GET_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#get';
    Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#do';
    Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_CALL = '호출 ';
    Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_PROCEDURE = '함수';
    Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_COLLAPSED_PREFIX = '호출 ';
    Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_TOOLTIP = '반환값이 없는 함수를 호출합니다.';
    Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_TRANSLATED_NAME = '반환을 호출하지 않는다';
    Blockly.Msg.LANG_PROCEDURES_CALLRETURN_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#return';
    Blockly.Msg.LANG_PROCEDURES_CALLRETURN_CALL = Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_CALL;
    Blockly.Msg.LANG_PROCEDURES_CALLRETURN_PROCEDURE = Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_PROCEDURE;
    Blockly.Msg.LANG_PROCEDURES_CALLRETURN_COLLAPSED_PREFIX = '호출 ';
    Blockly.Msg.LANG_PROCEDURES_CALLRETURN_TOOLTIP = '반환값의 프로시저를 호출한다';
    Blockly.Msg.LANG_PROCEDURES_CALLRETURN_TRANSLATED_NAME = '반환을 호출한다';
    Blockly.Msg.LANG_PROCEDURES_MUTATORCONTAINER_TITLE = '입력값';
    Blockly.Msg.LANG_PROCEDURES_MUTATORARG_TITLE = '입력:';
    Blockly.Msg.LANG_PROCEDURES_HIGHLIGHT_DEF = '하이라이트 프로시저';
    Blockly.Msg.LANG_PROCEDURES_MUTATORCONTAINER_TOOLTIP = '';
    Blockly.Msg.LANG_PROCEDURES_MUTATORARG_TOOLTIP = '';
    Blockly.Msg.LANG_COMPONENT_BLOCK_HELPURL = '';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TITLE_WHEN = '언제 ';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TITLE_DO = '실행';
    Blockly.Msg.LANG_COMPONENT_BLOCK_METHOD_HELPURL = '';
    Blockly.Msg.LANG_COMPONENT_BLOCK_METHOD_TITLE_CALL = '호출 ';
    Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_HELPURL = '';
    Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_TITLE_CALL = '호출 ';
    Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_TITLE_FOR_COMPONENT = '컴포넌트';
    Blockly.Msg.LANG_COMPONENT_BLOCK_GETTER_HELPURL = '';
    Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_GETTER_HELPURL = '';
    Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_GETTER_TITLE_OF_COMPONENT = '컴포넌트';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_HELPURL = '';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_TITLE_SET = '지정하기 ';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_TITLE_TO = ' 값';
    Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_HELPURL = '';
    Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_SET = '지정하기 ';
    Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_TO = ' 값';
    Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_OF_COMPONENT = '컴포넌트';
    Blockly.Msg.LANG_COMPONENT_BLOCK_BUTTON_HELPURL = '/reference/components/userinterface.html#Button';
    Blockly.Msg.LANG_COMPONENT_BLOCK_BUTTON_PROPERTIES_HELPURL = '/reference/components/userinterface.html#buttonproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_BUTTON_EVENTS_HELPURL = '/reference/components/userinterface.html#buttonevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CHECKBOX_HELPURL = '/reference/components/userinterface.html#CheckBox';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CHECKBOX_PROPERTIES_HELPURL = '/reference/components/userinterface.html#checkboxproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CHECKBOX_EVENTS_HELPURL = '/reference/components/userinterface.html#checkboxevents';

    Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_HELPURL = '/reference/components/sensors.html#Clock';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_PROPERTIES_HELPURL = '/reference/components/sensors.html#Clock';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_EVENTS_HELPURL = '/reference/components/sensors.html#Clock';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_METHODS_HELPURL = '/reference/components/sensors.html#Clock';

    Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_HELPURL = '/reference/components/userinterface.html#Image';
    Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_PROPERTIES_HELPURL = '/reference/components/userinterface.html#imageproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_EVENTS_HELPURL = '/reference/components/userinterface.html#imageevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_METHODS_HELPURL = '/reference/components/userinterface.html#imagemethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_HELPURL = '/reference/components/userinterface.html#Label';
    Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_PROPERTIES_HELPURL = '/reference/components/userinterface.html#labelproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_EVENTS_HELPURL = '/reference/components/userinterface.html#labelevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_METHODS_HELPURL = '/reference/components/userinterface.html#labelmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_HELPURL = '/reference/components/userinterface.html#ListPicker';
    Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_PROPERTIES_HELPURL = '/reference/components/userinterface.html#listpickerproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_EVENTS_HELPURL = '/reference/components/userinterface.html#listpickerevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_METHODS_HELPURL = '/reference/components/userinterface.html#listpickermethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_HELPURL = "/reference/components/userinterface.html#Notifier";
    Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_PROPERTIES_HELPURL = '/reference/components/userinterface.html#notifierproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_EVENTS_HELPURL = '/reference/components/userinterface.html#notifierevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_METHODS_HELPURL = '/reference/components/userinterface.html#notifiermethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_HELPURL = '/reference/components/userinterface.html#PasswordTextBox';
    Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_PROPERTIES_HELPURL = '/reference/components/userinterface.html#pwdboxproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_EVENTS_HELPURL = '/reference/components/userinterface.html#pwdboxevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_METHODS_HELPURL = '/reference/components/userinterface.html#pwdboxmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_HELPURL = '/reference/components/userinterface.html#Screen';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_PROPERTIES_HELPURL = '/reference/components/userinterface.html#screenproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_EVENTS_HELPURL = '/reference/components/userinterface.html#screenevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_METHODS_HELPURL = '/reference/components/userinterface.html#screenmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_HELPURL = '/reference/components/userinterface.html#Slider';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_PROPERTIES_HELPURL = '/reference/components/userinterface.html#sliderproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_EVENTS_HELPURL = '/reference/components/userinterface.html#sliderevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_METHODS_HELPURL = '/reference/components/userinterface.html#slidermethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_HELPURL = '/reference/components/userinterface.html#TextBox';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_PROPERTIES_HELPURL = '/reference/components/userinterface.html#textboxproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_EVENTS_HELPURL = '/reference/components/userinterface.html#textboxevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_METHODS_HELPURL = '/reference/components/userinterface.html#textboxmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_HELPURL = "/reference/components/userinterface.html#WebViewer";
    Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_PROPERTIES_HELPURL = '/reference/components/userinterface.html#webviewerproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_EVENTS_HELPURL = '/reference/components/userinterface.html#webviewerevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_METHODS_HELPURL = '/reference/components/userinterface.html#webviewermethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_HORIZARRANGE_HELPURL = "/reference/components/layout.html#HorizontalArrangement";
    Blockly.Msg.LANG_COMPONENT_BLOCK_HORIZARRANGE_PROPERTIES_HELPURL = '/reference/components/layout.html#horizarrangeproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_VERTARRANGE_HELPURL = "/reference/components/layout.html#VerticalArrangement";
    Blockly.Msg.LANG_COMPONENT_BLOCK_VERTARRANGE_PROPERTIES_HELPURL = '/reference/components/layout.html#vertarrangeproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TABLEARRANGE_HELPURL = "/reference/components/layout.html#TableArrangement";
    Blockly.Msg.LANG_COMPONENT_BLOCK_TABLEARRANGE_PROPERTIES_HELPURL = '/reference/components/layout.html#tablearrangeproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_HELPURL = '/reference/components/media.html#Camcorder';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_PROPERTIES_HELPURL = '/reference/components/media.html#camcorderproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_EVENTS_HELPURL = '/reference/components/media.html#camcorderevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_METHODS_HELPURL = '/reference/components/media.html#camcordermethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_HELPURL = '/reference/components/media.html#Camera';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_PROPERTIES_HELPURL = '/reference/components/media.html#cameraproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_EVENTS_HELPURL = '/reference/components/media.html#cameraevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_METHODS_HELPURL = '/reference/components/media.html#cameramethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_HELPURL = '/reference/components/media.html#ImagePicker';
    Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_PROPERTIES_HELPURL = '/reference/components/media.html#imagepickerproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_EVENTS_HELPURL = '/reference/components/media.html#imagepickerevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_METHODS_HELPURL = '/reference/components/media.html#imagepickermethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_HELPURL = '/reference/components/media.html#Player';
    Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_PROPERTIES_HELPURL = '/reference/components/media.html#playerproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_EVENTS_HELPURL = '/reference/components/media.html#playerevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_METHODS_HELPURL = '/reference/components/media.html#playermethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_HELPURL = '/reference/components/media.html#Sound';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_PROPERTIES_HELPURL = '/reference/components/media.html#soundproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_EVENTS_HELPURL = '/reference/components/media.html#soundevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_METHODS_HELPURL = '/reference/components/media.html#soundmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_HELPURL = "/reference/components/media.html#SoundRecorder";
    Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_PROPERTIES_HELPURL = '/reference/components/media.html#soundrecorderproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_EVENTS_HELPURL = '/reference/components/media.html#soundrecorderevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_METHODS_HELPURL = '/reference/components/media.html#soundrecordermethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_HELPURL = "/reference/components/media.html#SpeechRecognizer";
    Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_PROPERTIES_HELPURL = '/reference/components/media.html#speechrecognizerproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_EVENTS_HELPURL = '/reference/components/media.html#speechrecognizerevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_METHODS_HELPURL = '/reference/components/media.html#speechrecognizermethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_HELPURL = "/reference/components/media.html#TextToSpeech";
    Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_PROPERTIES_HELPURL = '/reference/components/media.html#texttospeechproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_EVENTS_HELPURL = '/reference/components/media.html#texttospeechevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_METHODS_HELPURL = '/reference/components/media.html#texttospeechmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_HELPURL = '/reference/components/media.html#VideoPlayer';
    Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_PROPERTIES_HELPURL = '/reference/components/media.html#videoplayerproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_EVENTS_HELPURL = '/reference/components/media.html#videoplayerevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_METHODS_HELPURL = '/reference/components/media.html#videoplayermethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_HELPURL = "/reference/components/animation.html#Ball";
    Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_PROPERTIES_HELPURL = '/reference/components/animation.html#ballproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_EVENTS_HELPURL = '/reference/components/animation.html#ballevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_METHODS_HELPURL = '/reference/components/animation.html#ballmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_HELPURL = '/reference/components/animation.html#Canvas';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_PROPERTIES_HELPURL = '/reference/components/animation.html#canvasproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_EVENTS_HELPURL = '/reference/components/animation.html#canvasevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_METHODS_HELPURL = '/reference/components/animation.html#canvasmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_HELPURL = "/reference/components/animation.html#ImageSprite";
    Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_PROPERTIES_HELPURL = '/reference/components/animation.html#imagespriteproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_EVENTS_HELPURL = '/reference/components/animation.html#imagespriteevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_METHODS_HELPURL = '/reference/components/animation.html#imagespritemethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_HELPURL = "/reference/components/sensors.html#AccelerometerSensor";
    Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_PROPERTIES_HELPURL = '/reference/components/sensors.html#accelerometersensorproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_EVENTS_HELPURL = '/reference/components/sensors.html#accelerometersensorevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_METHODS_HELPURL = '/reference/components/sensors.html#accelerometersensormethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_HELPURL = "/reference/components/sensors.html#BarcodeScanner";
    Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_PROPERTIES_HELPURL = '/reference/components/sensors.html#barcodescannerproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_EVENTS_HELPURL = '/reference/components/sensors.html#barcodescannerevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_METHODS_HELPURL = '/reference/components/sensors.html#barcodescannermethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_HELPURL = "/reference/components/sensors.html#LocationSensor";
    Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_PROPERTIES_HELPURL = '/reference/components/sensors.html#locationsensorproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_EVENTS_HELPURL = '/reference/components/sensors.html#locationsensorevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_METHODS_HELPURL = '/reference/components/sensors.html#locationsensormethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_HELPURL = "/reference/components/sensors.html#OrientationSensor";
    Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_PROPERTIES_HELPURL = '/reference/components/sensors.html#orientationsensorproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_EVENTS_HELPURL = '/reference/components/sensors.html#orientationsensorevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_METHODS_HELPURL = '/reference/components/sensors.html#orientationsensormethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_HELPURL = "/reference/components/social.html#ContactPicker";
    Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_PROPERTIES_HELPURL = '/reference/components/social.html#contactpickerproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_EVENTS_HELPURL = '/reference/components/social.html#contactpickerevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_METHODS_HELPURL = '/reference/components/social.html#contactpickermethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_HELPURL = "/reference/components/social.html#EmailPicker";
    Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_PROPERTIES_HELPURL = '/reference/components/social.html#emailpickerproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_EVENTS_HELPURL = '/reference/components/social.html#emailpickerevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_METHODS_HELPURL = '/reference/components/social.html#emailpickermethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_HELPURL = "/reference/components/social.html#PhoneCall";
    Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_PROPERTIES_HELPURL = '/reference/components/social.html#phonecallproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_EVENTS_HELPURL = '/reference/components/social.html#phonecallevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_METHODS_HELPURL = '/reference/components/social.html#phonecallmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_HELPURL = "/reference/components/social.html#PhoneNumberPicker";
    Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_PROPERTIES_HELPURL = '/reference/components/social.html#phonenumberpickerproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_EVENTS_HELPURL = '/reference/components/social.html#phonenumberpickerevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_METHODS_HELPURL = '/reference/components/social.html#phonenumberpickermethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_HELPURL = "/reference/components/social.html#Texting";
    Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_PROPERTIES_HELPURL = '/reference/components/social.html#textingproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_EVENTS_HELPURL = '/reference/components/social.html#textingevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_METHODS_HELPURL = '/reference/components/social.html#textingmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_HELPURL = "/reference/components/social.html#Twitter";
    Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_PROPERTIES_HELPURL = '/reference/components/social.html#twitterproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_EVENTS_HELPURL = '/reference/components/social.html#twitterevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_METHODS_HELPURL = '/reference/components/social.html#twittermethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_HELPURL = "/reference/components/storage.html#FusiontablesControl";
    Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_PROPERTIES_HELPURL = '/reference/components/storage.html#fusiontablescontrolproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_EVENTS_HELPURL = '/reference/components/storage.html#fusiontablescontrolevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_METHODS_HELPURL = '/reference/components/storage.html#fusiontablescontrolmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_HELPURL = '/reference/components/storage.html#TinyDB';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_PROPERTIES_HELPURL = '/reference/components/storage.html#tinydbproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_EVENTS_HELPURL = '/reference/components/storage.html#tinydbevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_METHODS_HELPURL = '/reference/components/storage.html#tinydbmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_HELPURL = "/reference/components/storage.html#TinyWebDB";
    Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_PROPERTIES_HELPURL = '/reference/components/storage.html#tinywebdbproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_EVENTS_HELPURL = '/reference/components/storage.html#tinywebdbevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_METHODS_HELPURL = '/reference/components/storage.html#tinywebdbmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_HELPURL = "/reference/components/connectivity.html#ActivityStarter";
    Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_PROPERTIES_HELPURL = '/reference/components/connectivity.html#activitystarterproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_EVENTS_HELPURL = '/reference/components/connectivity.html#activitystarterevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_METHODS_HELPURL = '/reference/components/connectivity.html#activitystartermethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_HELPURL = "/reference/components/connectivity.html#BluetoothClient";
    Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_PROPERTIES_HELPURL = '/reference/components/connectivity.html#bluetoothclientproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_EVENTS_HELPURL = '/reference/components/connectivity.html#bluetoothclientevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_METHODS_HELPURL = '/reference/components/connectivity.html#bluetoothclientmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_HELPURL = "/reference/components/connectivity.html#BluetoothServer";
    Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_PROPERTIES_HELPURL = '/reference/components/connectivity.html#bluetoothserverproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_EVENTS_HELPURL = '/reference/components/connectivity.html#bluetoothserverevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_METHODS_HELPURL = '/reference/components/connectivity.html#bluetoothservermethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_HELPURL = "/reference/components/connectivity.html#Web";
    Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_PROPERTIES_HELPURL = '/reference/components/connectivity.html#webproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_EVENTS_HELPURL = '/reference/components/connectivity.html#webevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_METHODS_HELPURL = '/reference/components/connectivity.html#webmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDIRECT_HELPURL = "/reference/components/legomindstorms.html#NxtDirectCommands";
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDIRECT_PROPERTIES_HELPURL = '/reference/components/legomindstorms.html#nxtdirectproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDIRECT_METHODS_HELPURL = '/reference/components/legomindstorms.html#nxtdirectmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_HELPURL = "/reference/components/legomindstorms.html#NxtColorSensor";
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_PROPERTIES_HELPURL = '/reference/components/legomindstorms.html#nxtcolorproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_EVENTS_HELPURL = '/reference/components/legomindstorms.html#nxtcolorevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_METHODS_HELPURL = '/reference/components/legomindstorms.html#nxtcolormethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_HELPURL = "/reference/components/legomindstorms.html#NxtLightSensor";
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_PROPERTIES_HELPURL = '/reference/components/legomindstorms.html#nxtlightproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_EVENTS_HELPURL = '/reference/components/legomindstorms.html#nxtlightevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_METHODS_HELPURL = '/reference/components/legomindstorms.html#nxtlightmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_HELPURL = "/reference/components/legomindstorms.html#NxtSoundSensor";
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_PROPERTIES_HELPURL = '/reference/components/legomindstorms.html#nxtsoundproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_EVENTS_HELPURL = '/reference/components/legomindstorms.html#nxtsoundevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_METHODS_HELPURL = '/reference/components/legomindstorms.html#nxtsoundmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_HELPURL = "/reference/components/legomindstorms.html#NxtTouchSensor";
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_PROPERTIES_HELPURL = '/reference/components/legomindstorms.html#nxttouchproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_EVENTS_HELPURL = '/reference/components/legomindstorms.html#nxttouchevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_METHODS_HELPURL = '/reference/components/legomindstorms.html#nxttouchmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_HELPURL = "/reference/components/legomindstorms.html#NxtUltrasonicSensor";
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_PROPERTIES_HELPURL = '/reference/components/legomindstorms.html#nxtultrasonicproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_EVENTS_HELPURL = '/reference/components/legomindstorms.html#nxtultrasonicevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_METHODS_HELPURL = '/reference/components/legomindstorms.html#nxtultrasonicmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDRIVE_HELPURL = '/reference/components/legomindstorms.html#NxtDrive';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDRIVE_PROPERTIES_HELPURL = '/reference/components/legomindstorms.html#nxtdriveproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDRIVE_METHODS_HELPURL = '/reference/components/legomindstorms.html#nxtdrivemethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_HELPURL = "/reference/components/internal.html#GameClient";
    Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_PROPERTIES_HELPURL = '/reference/components/internal.html#gameclientproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_EVENTS_HELPURL = '/reference/components/internal.html#gameclientevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_METHODS_HELPURL = '/reference/components/internal.html#gameclientmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_HELPURL = "/reference/components/internal.html#Voting";
    Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_PROPERTIES_HELPURL = '/reference/components/internal.html#votingproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_EVENTS_HELPURL = '/reference/components/internal.html#votingevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_METHODS_HELPURL = '/reference/components/internal.html#votingmethods';
    Blockly.Msg.SHOW_WARNINGS = "경고 보이기";
    Blockly.Msg.HIDE_WARNINGS = "경고 숨기기";
    Blockly.Msg.MISSING_SOCKETS_WARNINGS = "블록의 모든 구멍을 채워야 합니다";
    Blockly.Msg.WRONG_TYPE_BLOCK_WARINGS = "이 블럭은 이벤트 블럭 또는 함수 정의에 연결되어야 합니다";
    Blockly.Msg.REPL_ERROR_FROM_COMPANION = "컴패니언 오류";
    Blockly.Msg.REPL_NETWORK_CONNECTION_ERROR = "네트워크 연결 오류";
    Blockly.Msg.REPL_NETWORK_ERROR = "네트워크 오류";
    Blockly.Msg.REPL_NETWORK_ERROR_RESTART = "컴패니언과 통신하는데 네트워크 오류가 발생했습니다.<br />컴패니언을 다시 시작하여 다시 연결해보세요";
    Blockly.Msg.REPL_OK = "확인";
    Blockly.Msg.REPL_COMPANION_VERSION_CHECK = "컴패니언 버전 확인";
    Blockly.Msg.REPL_COMPANION_OUT_OF_DATE = '컴패니언 앱의 버전이 오래되었습니다. 업데이트를 하려면 "확인"을 클릭하세요. Watch your ';
    Blockly.Msg.REPL_EMULATORS = "에뮬레이터의";
    Blockly.Msg.REPL_DEVICES = "기기의";
    Blockly.Msg.REPL_APPROVE_UPDATE = " screen because you will be asked to approve the update.";
    Blockly.Msg.REPL_NOT_NOW = "나중에";
    Blockly.Msg.REPL_COMPANION_OUT_OF_DATE1 = "지금 사용 중인 컴패니언은 오래된 버전입니다. <br/><br/>이 버전의 앱 인벤터는 컴패니언 버전과 함께 사용되어야 합니다";
    Blockly.Msg.REPL_COMPANION_OUT_OF_DATE_IMMEDIATE = "오래된 버전의 컴패니언을 사용 중입니다. 지금 당장 컴패니언을 업데이트 할 필요는 없지만 조만간 업데이트를 고려해야할 것입니다..";
    Blockly.Msg.REPL_DISMISS = "거절하기";
    Blockly.Msg.REPL_SOFTWARE_UPDATE = "소프트웨어 업데이트";
    Blockly.Msg.REPL_OK_LOWER = "확인";
    Blockly.Msg.REPL_GOT_IT = "알겠습니다";
    Blockly.Msg.REPL_UPDATE_INFO = '업데이트가 여러분의 기기에 지금 설치되는 중입니다. 기기 (또는 에뮬레이터) 화면에서 소프트웨어 설치를 승인해주십시오.<br /><br />중요: 업데이트가 완료되면, "완료"를 선택하세요 ("열기"를 클릭하면 안됩니다). 그 다음 웹 브라우저의 앱 인벤터로 가서, "연결" 메뉴를 클릭하시고 "다시 연결하기"를 선택하세요. 그러면 기기가 다시 연결됩니다.';
    Blockly.Msg.REPL_UNABLE_TO_UPDATE = "기기/에뮬레이터로 업데이트를 보낼 수 없습니다";
    Blockly.Msg.REPL_UNABLE_TO_LOAD = "앱 인벤터 서버에서 업데이트를 볼러올 수 없습니다";
    Blockly.Msg.REPL_UNABLE_TO_LOAD_NO_RESPOND = "앱 인벤터 서버 (서버 응답 없음)에서 업데이트를 불러올 수 없습니다.";
    Blockly.Msg.REPL_NOW_DOWNLOADING = "앱 인벤터 서버에서 업데이트를 다운로드 중입니다, 잠시만 기다려주세요";
    Blockly.Msg.REPL_RUNTIME_ERROR = "런타임 오류";
    Blockly.Msg.REPL_NO_ERROR_FIVE_SECONDS = "<br/><i>참고:</i>&nbsp;5초 동안은 다른 오류가 보고되지 않습니다.";
    Blockly.Msg.REPL_CONNECTING_USB_CABLE = "USB 케이블로 연결 중";
    Blockly.Msg.REPL_STARTING_EMULATOR = "안드로이드 에뮬레이터 시작 중<br/>잠시만 기다려주세요: 1~2분 정도 소요됩니다.";
    Blockly.Msg.REPL_CONNECTING = "연결 중…";
    Blockly.Msg.REPL_CANCEL = "취소하기";
    Blockly.Msg.REPL_GIVE_UP = "그만두기";
    Blockly.Msg.REPL_KEEP_TRYING = "계속 시도하기";
    Blockly.Msg.REPL_CONNECTION_FAILURE1 = "연결 실패";
    Blockly.Msg.REPL_NO_START_EMULATOR = "에뮬레이터에서는 MIT AI 컴패니언을 시작할 수 없습니다";
    Blockly.Msg.REPL_PLUGGED_IN_Q = "꽂혀있나요?";
    Blockly.Msg.REPL_AI_NO_SEE_DEVICE = "AI2가 기기를 찾지 못합니다. 케이블이 꽂혀있는지, 올바른 드라이버를 사용 중인지 확인해주세요.";
    Blockly.Msg.REPL_HELPER_Q = "도움이 필요한가요?";
    Blockly.Msg.REPL_HELPER_NOT_RUNNING = 'ai스타터 도우미가 작동을 멈춘 것 같습니다<br /><a href="http://appinventor.mit.edu" target="_blank">도움이 필요한가요?</a>';
    Blockly.Msg.REPL_USB_CONNECTED_WAIT = "USB 연결됨, 모두 정상 작동하는지 확인하기 위해 ";
    Blockly.Msg.REPL_SECONDS_ENSURE_RUNNING = " 초 기다리는 중.";
    Blockly.Msg.REPL_EMULATOR_STARTED = "에뮬레이터 시작됨, 모두 정상 작동하는지 확인하기 위해 ";
    Blockly.Msg.REPL_STARTING_COMPANION_ON_PHONE = "연결된 폰에서 컴패니언 앱을 시작합니다.";
    Blockly.Msg.REPL_STARTING_COMPANION_IN_EMULATOR = "에뮬레이터에서 컴패니언 앱 시작합니다.";
    Blockly.Msg.REPL_COMPANION_STARTED_WAITING = "컴패니언 시작 중, 모두 정상 작동하는지 확인하기 위해 ";
    Blockly.Msg.REPL_VERIFYING_COMPANION = "실행된 컴패니언 확인 중....";
    Blockly.Msg.REPL_CONNECT_TO_COMPANION = "컴패니언에 연결하기";
    Blockly.Msg.REPL_TRY_AGAIN1 = "MIT AI2 컴패니언에 연결 실패하였습니다, 다시 시도해주세요.";
    Blockly.Msg.REPL_YOUR_CODE_IS = "여러분의 코드는";
    Blockly.Msg.REPL_DO_YOU_REALLY_Q = "정말입니까?";
    Blockly.Msg.REPL_FACTORY_RESET = '에뮬레이터를 "공장 초기화"상태로 돌려놓을 것입니다. 만약 이전에 에뮬레이터에서 컴패니언 앱을 업데이트 한 적이 있다면, 다시 업데이트를 해주어야 합니다.';
    Blockly.Msg.WARNING_DELETE_X_BLOCKS = "모든 %1 개의 블록을 지우시겠습니까?";
    Blockly.Msg.GENERATE_YAIL = "Yail 만들기";
    Blockly.Msg.DO_IT = "바로 실행";
    Blockly.Msg.CAN_NOT_DO_IT = "실행할 수 없습니다";
    Blockly.Msg.CONNECT_TO_DO_IT = '"바로 실행"하려면 컴패니언 또는 에뮬레이터에 연결되어야 합니다.';
    Blockly.Msg.COPY_TO_BACKPACK = '백팩에 추가하기';
    Blockly.Msg.COPY_ALLBLOCKS = '모든 블록을 백팩으로 복사하기';
    Blockly.Msg.BACKPACK_GET = '백팩에 있는 모든 블록 붙여넣기';
    Blockly.Msg.BACKPACK_EMPTY = '백팩 비우기';
    Blockly.Msg.BACKPACK_CONFIRM_EMPTY = '백팩에 있는 모든 블록을 비우시겠습니까?';
    Blockly.Msg.BACKPACK_DOC_TITLE = "백팩 정보";
    Blockly.Msg.BACKPACK_DOCUMENTATION = '백팩은 블록 복사-붙여넣기를 도와주는 기능입니다. 현재 사용 중인 프로젝트 또는 스크린에서 블록을 복사하여 다른 프로젝트나 스크린에 붙여넣을 수 있습니다. 블록을 복사하려면, 원하는 블록을 드래그하여 백팩에 넣어주세요. 복사된 블록을 붙여넣으려면, 백팩 아이콘을 클릭한 다음 블록을 작업 공간으로 드래그하면 됩니다.</p><p>백팩안에 들어있는 내용들을 현재 접속된 앱 인벤터 세션 동안에만 유지됩니다. 만약 앱 인벤터를 종료하거나 웹 페이지를 다시 불러온다면 백팩은 다시 초기화됩니다. 즉 빈 가방이 되는거죠.</p><p>더 자세한 내용은 다음 문서를 참고하세요: </p><p><a href="http://ai2.appinventor.mit.edu/reference/other/backpack.html" target="_blank">http://ai2.appinventor.mit.edu/reference/other/backpack.html</a>';
  }
};

Blockly.Msg.ko_kr.switch_language_to_korean.init();
