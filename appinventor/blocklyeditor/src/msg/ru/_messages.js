// -*- mode: java; c-basic-offset: 2; -*-
// Copyright 2015 Massachusetts Institute of Technology. All rights reserved.

/**
 * @fileoverview Russian strings.
 * @author Russian Pootle Contributors
 */
'use strict';

goog.provide('Blockly.Msg.ru');

/**
 * Due to the frequency of long strings, the 80-column wrap rule need not apply
 * to message files.
 */

Blockly.Msg.ru.switch_language_to_russian = {
  // Switch language to Russian.
  category: '',
  helpUrl: '',
  init: function() {

    Blockly.ERROR_BLOCK_CANNOT_BE_IN_DEFINTION = 'Этот блок не может использоваться в определении';
    Blockly.ERROR_DUPLICATE_EVENT_HANDLER = 'Это дубликат обработчика события для этого элемента.';
    Blockly.ERROR_SELECT_VALID_ITEM_FROM_DROPDOWN = 'Выберите подходящий пункт из выпадающего меню.';
    Blockly.MSG_CHANGE_VALUE_TITLE = 'Изменить значение:';
    Blockly.MSG_NEW_VARIABLE = 'Новая переменная...';
    Blockly.MSG_NEW_VARIABLE_TITLE = 'Новое имя переменной:';
    Blockly.MSG_PROCEDURE_CATEGORY = 'Процедуры';
    Blockly.MSG_RENAME_VARIABLE = 'Переименовать переменную...';
    Blockly.MSG_RENAME_VARIABLE_TITLE = 'Переименовать все переменные "%1" в:';
    Blockly.MSG_VARIABLE_CATEGORY = 'Переменные';
    Blockly.Msg.ADD_COMMENT = 'Добавить комментарий';
    Blockly.Msg.ARRANGE_H = 'Упорядочить блоки по горизонтали';
    Blockly.Msg.ARRANGE_S = 'Упорядочить блоки по диагонали';
    Blockly.Msg.ARRANGE_V = 'Упорядочить блоки по вертикали';
    Blockly.Msg.CAN_NOT_DO_IT = 'Невозможно выполнить';
    Blockly.Msg.CLEAR_DO_IT_ERROR = 'Очистить ошибку';
    Blockly.Msg.COLLAPSE_ALL = 'Свернуть блоки';
    Blockly.Msg.COLLAPSE_BLOCK = 'Свернуть блок';
    Blockly.Msg.CONNECT_TO_DO_IT = 'Чтобы использовать команду Выполнить, вы должны быть подключены к Companion или к эмулятору.';
    Blockly.Msg.DELETE_BLOCK = 'Удалить блок';
    Blockly.Msg.DELETE_X_BLOCKS = 'Удалить %1 блоков';
    Blockly.Msg.DISABLE_BLOCK = 'Отключить блок';
    Blockly.Msg.DO_IT = 'Выполнить';
    Blockly.Msg.DUPLICATE_BLOCK = 'Создать копию';
    Blockly.Msg.ENABLE_BLOCK = 'Включить блок';
    Blockly.Msg.EXPAND_ALL = 'Развернуть блоки';
    Blockly.Msg.EXPAND_BLOCK = 'Развернуть блок';
    Blockly.Msg.EXTERNAL_INPUTS = 'Дополнительные входы';
    Blockly.Msg.GENERATE_YAIL = 'Генерировать Yail';
    Blockly.Msg.HELP = 'Справка';
    Blockly.Msg.HIDE_WARNINGS = 'Скрыть Предупреждения';
    Blockly.Msg.HORIZONTAL_PARAMETERS = 'Расположить параметры горизонтально';
    Blockly.Msg.INLINE_INPUTS = 'Внутренний параметр';
    Blockly.Msg.LANG_CATEGORY_CONTROLS = 'Управление';
    Blockly.Msg.LANG_CATEGORY_LISTS = 'Списки';
    Blockly.Msg.LANG_CATEGORY_LOGIC = 'Логика';
    Blockly.Msg.LANG_CATEGORY_MATH = 'Математика';
    Blockly.Msg.LANG_CATEGORY_TEXT = 'Текст';
    Blockly.Msg.LANG_COLOUR_BLACK = 'чёрный';
    Blockly.Msg.LANG_COLOUR_BLUE = 'синий';
    Blockly.Msg.LANG_COLOUR_CYAN = 'голубой';
    Blockly.Msg.LANG_COLOUR_DARK_GRAY = 'тёмно-серый';
    Blockly.Msg.LANG_COLOUR_GRAY = 'серый';
    Blockly.Msg.LANG_COLOUR_GREEN = 'зеленый';
    Blockly.Msg.LANG_COLOUR_LIGHT_GRAY = 'светло-серый';
    Blockly.Msg.LANG_COLOUR_MAGENTA = 'пурпурный';
    Blockly.Msg.LANG_COLOUR_MAKE_COLOUR = 'создать цвет';
    Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/colors#make';
    Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_TOOLTIP = '"Цвет с заданными красной, зелёной, голубой и (необязательной) альфа составляющими"';
    Blockly.Msg.LANG_COLOUR_ORANGE = 'оранжевый';
    Blockly.Msg.LANG_COLOUR_PICKER_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/colors#basic';
    Blockly.Msg.LANG_COLOUR_PICKER_TOOLTIP = 'чёрный';
    Blockly.Msg.LANG_COLOUR_PINK = 'розовый';
    Blockly.Msg.LANG_COLOUR_RED = 'красный';
    Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR = 'расщепить цвет';
    Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/colors#split';
    Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR_TOOLTIP = '"Список четырёх элементов, каждый в интервале от 0 до 255, представляющих красную, зелёную, синюю и альфа составляющие."';
    Blockly.Msg.LANG_COLOUR_WHITE = 'белый';
    Blockly.Msg.LANG_COLOUR_YELLOW = 'жёлтый';
    Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_EVENTS_HELPURL = '/reference/components/sensors.html#accelerometersensorevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_HELPURL = '/reference/components/sensors.html#AccelerometerSensor';
    Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_METHODS_HELPURL = '/reference/components/sensors.html#accelerometersensormethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_ACCELEROMETERSENSOR_PROPERTIES_HELPURL = '/reference/components/sensors.html#accelerometersensorproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_EVENTS_HELPURL = '/reference/components/connectivity.html#activitystarterevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_HELPURL = '/reference/components/connectivity.html#ActivityStarter';
    Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_METHODS_HELPURL = '/reference/components/connectivity.html#activitystartermethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_ACTIVITYSTARTER_PROPERTIES_HELPURL = '/reference/components/connectivity.html#activitystarterproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_EVENTS_HELPURL = '/reference/components/animation.html#ballevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_HELPURL = '/reference/components/animation.html#Ball';
    Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_METHODS_HELPURL = '/reference/components/animation.html#ballmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_BALL_PROPERTIES_HELPURL = '/reference/components/animation.html#ballproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_EVENTS_HELPURL = '/reference/components/sensors.html#barcodescannerevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_HELPURL = '/reference/components/sensors.html#BarcodeScanner';
    Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_METHODS_HELPURL = '/reference/components/sensors.html#barcodescannermethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_BARCODESCANNER_PROPERTIES_HELPURL = '/reference/components/sensors.html#barcodescannerproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_EVENTS_HELPURL = '/reference/components/connectivity.html#bluetoothclientevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_HELPURL = '/reference/components/connectivity.html#BluetoothClient';
    Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_METHODS_HELPURL = '/reference/components/connectivity.html#bluetoothclientmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHCLIENT_PROPERTIES_HELPURL = '/reference/components/connectivity.html#bluetoothclientproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_EVENTS_HELPURL = '/reference/components/connectivity.html#bluetoothserverevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_HELPURL = '/reference/components/connectivity.html#BluetoothServer';
    Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_METHODS_HELPURL = '/reference/components/connectivity.html#bluetoothservermethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_BLUETOOTHSERVER_PROPERTIES_HELPURL = '/reference/components/connectivity.html#bluetoothserverproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_BUTTON_EVENTS_HELPURL = '/reference/components/userinterface.html#buttonevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_BUTTON_HELPURL = '/reference/components/userinterface.html#Button';
    Blockly.Msg.LANG_COMPONENT_BLOCK_BUTTON_PROPERTIES_HELPURL = '/reference/components/userinterface.html#buttonproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_EVENTS_HELPURL = '/reference/components/media.html#camcorderevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_HELPURL = '/reference/components/media.html#Camcorder';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_METHODS_HELPURL = '/reference/components/media.html#camcordermethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CAMCORDER_PROPERTIES_HELPURL = '/reference/components/media.html#camcorderproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_EVENTS_HELPURL = '/reference/components/media.html#cameraevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_HELPURL = '/reference/components/media.html#Camera';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_METHODS_HELPURL = '/reference/components/media.html#cameramethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CAMERA_PROPERTIES_HELPURL = '/reference/components/media.html#cameraproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_EVENTS_HELPURL = '/reference/components/animation.html#canvasevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_HELPURL = '/reference/components/animation.html#Canvas';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_METHODS_HELPURL = '/reference/components/animation.html#canvasmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CANVAS_PROPERTIES_HELPURL = '/reference/components/animation.html#canvasproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CHECKBOX_EVENTS_HELPURL = '/reference/components/userinterface.html#checkboxevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CHECKBOX_HELPURL = '/reference/components/userinterface.html#CheckBox';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CHECKBOX_PROPERTIES_HELPURL = '/reference/components/userinterface.html#checkboxproperties';

    Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_HELPURL = '/reference/components/sensors.html#Clock';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_PROPERTIES_HELPURL = '/reference/components/sensors.html#Clock';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_EVENTS_HELPURL = '/reference/components/sensors.html#Clock';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CLOCK_METHODS_HELPURL = '/reference/components/sensors.html#Clock';

    Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_EVENTS_HELPURL = '/reference/components/social.html#contactpickerevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_HELPURL = '/reference/components/social.html#ContactPicker';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_METHODS_HELPURL = '/reference/components/social.html#contactpickermethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_CONTACTPICKER_PROPERTIES_HELPURL = '/reference/components/social.html#contactpickerproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_EVENTS_HELPURL = '/reference/components/social.html#emailpickerevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_HELPURL = '/reference/components/social.html#EmailPicker';
    Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_METHODS_HELPURL = '/reference/components/social.html#emailpickermethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_EMAILPICKER_PROPERTIES_HELPURL = '/reference/components/social.html#emailpickerproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_EVENTS_HELPURL = '/reference/components/storage.html#fusiontablescontrolevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_HELPURL = '/reference/components/storage.html#FusiontablesControl';
    Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_METHODS_HELPURL = '/reference/components/storage.html#fusiontablescontrolmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_FUSIONTABLESCONTROL_PROPERTIES_HELPURL = '/reference/components/storage.html#fusiontablescontrolproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_EVENTS_HELPURL = '/reference/components/internal.html#gameclientevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_HELPURL = '/reference/components/internal.html#GameClient';
    Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_METHODS_HELPURL = '/reference/components/internal.html#gameclientmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_GAMECLIENT_PROPERTIES_HELPURL = '/reference/components/internal.html#gameclientproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_GETTER_HELPURL = ' ';
    Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_GETTER_TITLE_OF_COMPONENT = 'компонента';
    Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_HELPURL = ' ';
    Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_TITLE_CALL = 'вызвать ';
    Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_TITLE_FOR_COMPONENT = 'для компонента';
    Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_HELPURL = ' ';
    Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_OF_COMPONENT = 'компонента';
    Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_SET = 'присвоить ';
    Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_TO = 'в';
    Blockly.Msg.LANG_COMPONENT_BLOCK_GETTER_HELPURL = ' ';
    Blockly.Msg.LANG_COMPONENT_BLOCK_GYROSCOPESENSOR_EVENTS_HELPURL = '/reference/components/sensors.html#gyroscopesensorevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_GYROSCOPESENSOR_HELPURL = '/reference/components/sensors.html#GyroscopeSensor';
    Blockly.Msg.LANG_COMPONENT_BLOCK_GYROSCOPESENSOR_METHODS_HELPURL = '/reference/components/sensors.html#gyroscopesensormethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_GYROSCOPESENSOR_PROPERTIES_HELPURL = '/reference/components/sensors.html#gyroscopesensorproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_HELPURL = ' ';
    Blockly.Msg.LANG_COMPONENT_BLOCK_HORIZARRANGE_HELPURL = '/reference/components/layout.html#HorizontalArrangement';
    Blockly.Msg.LANG_COMPONENT_BLOCK_HORIZARRANGE_PROPERTIES_HELPURL = '/reference/components/layout.html#horizarrangeproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_EVENTS_HELPURL = '/reference/components/media.html#imagepickerevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_HELPURL = '/reference/components/media.html#ImagePicker';
    Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_METHODS_HELPURL = '/reference/components/media.html#imagepickermethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGEPICKER_PROPERTIES_HELPURL = '/reference/components/media.html#imagepickerproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_EVENTS_HELPURL = '/reference/components/animation.html#imagespriteevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_HELPURL = '/reference/components/animation.html#ImageSprite';
    Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_METHODS_HELPURL = '/reference/components/animation.html#imagespritemethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGESPRITE_PROPERTIES_HELPURL = '/reference/components/animation.html#imagespriteproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_EVENTS_HELPURL = '/reference/components/userinterface.html#imageevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_HELPURL = '/reference/components/userinterface.html#Image';
    Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_METHODS_HELPURL = '/reference/components/userinterface.html#imagemethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_IMAGE_PROPERTIES_HELPURL = '/reference/components/userinterface.html#imageproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_EVENTS_HELPURL = '/reference/components/userinterface.html#labelevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_HELPURL = '/reference/components/userinterface.html#Label';
    Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_METHODS_HELPURL = '/reference/components/userinterface.html#labelmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_LABEL_PROPERTIES_HELPURL = '/reference/components/userinterface.html#labelproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_EVENTS_HELPURL = '/reference/components/userinterface.html#listpickerevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_HELPURL = '/reference/components/userinterface.html#ListPicker';
    Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_METHODS_HELPURL = '/reference/components/userinterface.html#listpickermethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_LISTPICKER_PROPERTIES_HELPURL = '/reference/components/userinterface.html#listpickerproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_EVENTS_HELPURL = '/reference/components/sensors.html#locationsensorevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_HELPURL = '/reference/components/sensors.html#LocationSensor';
    Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_METHODS_HELPURL = '/reference/components/sensors.html#locationsensormethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_LOCATIONSENSOR_PROPERTIES_HELPURL = '/reference/components/sensors.html#locationsensorproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_METHOD_HELPURL = ' ';
    Blockly.Msg.LANG_COMPONENT_BLOCK_METHOD_TITLE_CALL = 'вызов';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_EVENTS_HELPURL = '/reference/components/userinterface.html#notifierevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_HELPURL = '/reference/components/userinterface.html#Notifier';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_METHODS_HELPURL = '/reference/components/userinterface.html#notifiermethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NOTIFIER_PROPERTIES_HELPURL = '/reference/components/userinterface.html#notifierproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_EVENTS_HELPURL = '/reference/components/legomindstorms.html#nxtcolorevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_HELPURL = '/reference/components/legomindstorms.html#NxtColorSensor';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_METHODS_HELPURL = '/reference/components/legomindstorms.html#nxtcolormethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTCOLOR_PROPERTIES_HELPURL = '/reference/components/legomindstorms.html#nxtcolorproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDIRECT_HELPURL = '/reference/components/legomindstorms.html#NxtDirectCommands';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDIRECT_METHODS_HELPURL = '/reference/components/legomindstorms.html#nxtdirectmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDIRECT_PROPERTIES_HELPURL = '/reference/components/legomindstorms.html#nxtdirectproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDRIVE_HELPURL = '/reference/components/legomindstorms.html#NxtDrive';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDRIVE_METHODS_HELPURL = '/reference/components/legomindstorms.html#nxtdrivemethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTDRIVE_PROPERTIES_HELPURL = '/reference/components/legomindstorms.html#nxtdriveproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_EVENTS_HELPURL = '/reference/components/legomindstorms.html#nxtlightevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_HELPURL = '/reference/components/legomindstorms.html#NxtLightSensor';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_METHODS_HELPURL = '/reference/components/legomindstorms.html#nxtlightmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTLIGHT_PROPERTIES_HELPURL = '/reference/components/legomindstorms.html#nxtlightproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_EVENTS_HELPURL = '/reference/components/legomindstorms.html#nxtsoundevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_HELPURL = '/reference/components/legomindstorms.html#NxtSoundSensor';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_METHODS_HELPURL = '/reference/components/legomindstorms.html#nxtsoundmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTSOUND_PROPERTIES_HELPURL = '/reference/components/legomindstorms.html#nxtsoundproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_EVENTS_HELPURL = '/reference/components/legomindstorms.html#nxttouchevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_HELPURL = '/reference/components/legomindstorms.html#NxtTouchSensor';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_METHODS_HELPURL = '/reference/components/legomindstorms.html#nxttouchmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTTOUCH_PROPERTIES_HELPURL = '/reference/components/legomindstorms.html#nxttouchproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_EVENTS_HELPURL = '/reference/components/legomindstorms.html#nxtultrasonicevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_HELPURL = '/reference/components/legomindstorms.html#NxtUltrasonicSensor';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_METHODS_HELPURL = '/reference/components/legomindstorms.html#nxtultrasonicmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_NXTULTRASONIC_PROPERTIES_HELPURL = '/reference/components/legomindstorms.html#nxtultrasonicproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_EVENTS_HELPURL = '/reference/components/sensors.html#orientationsensorevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_HELPURL = '/reference/components/sensors.html#OrientationSensor';
    Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_METHODS_HELPURL = '/reference/components/sensors.html#orientationsensormethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_ORIENTATIONSENSOR_PROPERTIES_HELPURL = '/reference/components/sensors.html#orientationsensorproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_EVENTS_HELPURL = '/reference/components/userinterface.html#pwdboxevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_HELPURL = '/reference/components/userinterface.html#PasswordTextBox';
    Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_METHODS_HELPURL = '/reference/components/userinterface.html#pwdboxmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_PASSWORDTEXTBOX_PROPERTIES_HELPURL = '/reference/components/userinterface.html#pwdboxproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_EVENTS_HELPURL = '/reference/components/social.html#phonecallevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_HELPURL = '/reference/components/social.html#PhoneCall';
    Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_METHODS_HELPURL = '/reference/components/social.html#phonecallmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_PHONECALL_PROPERTIES_HELPURL = '/reference/components/social.html#phonecallproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_EVENTS_HELPURL = '/reference/components/social.html#phonenumberpickerevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_HELPURL = '/reference/components/social.html#PhoneNumberPicker';
    Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_METHODS_HELPURL = '/reference/components/social.html#phonenumberpickermethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_PHONENUMBERPICKER_PROPERTIES_HELPURL = '/reference/components/social.html#phonenumberpickerproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_EVENTS_HELPURL = '/reference/components/media.html#playerevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_HELPURL = '/reference/components/media.html#Player';
    Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_METHODS_HELPURL = '/reference/components/media.html#playermethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_PLAYER_PROPERTIES_HELPURL = '/reference/components/media.html#playerproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_EVENTS_HELPURL = '/reference/components/userinterface.html#screenevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_HELPURL = '/reference/components/userinterface.html#Screen';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_METHODS_HELPURL = '/reference/components/userinterface.html#screenmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SCREEN_PROPERTIES_HELPURL = '/reference/components/userinterface.html#screenproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_HELPURL = ' ';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_TITLE_SET = 'присвоить ';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_TITLE_TO = 'в';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_EVENTS_HELPURL = '/reference/components/userinterface.html#sliderevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_HELPURL = '/reference/components/userinterface.html#Slider';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_METHODS_HELPURL = '/reference/components/userinterface.html#slidermethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SLIDER_PROPERTIES_HELPURL = '/reference/components/userinterface.html#sliderproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_EVENTS_HELPURL = '/reference/components/media.html#soundrecorderevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_HELPURL = '/reference/components/media.html#SoundRecorder';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_METHODS_HELPURL = '/reference/components/media.html#soundrecordermethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SOUNDRECORDER_PROPERTIES_HELPURL = '/reference/components/media.html#soundrecorderproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_EVENTS_HELPURL = '/reference/components/media.html#soundevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_HELPURL = '/reference/components/media.html#Sound';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_METHODS_HELPURL = '/reference/components/media.html#soundmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SOUND_PROPERTIES_HELPURL = '/reference/components/media.html#soundproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_EVENTS_HELPURL = '/reference/components/media.html#speechrecognizerevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_HELPURL = '/reference/components/media.html#SpeechRecognizer';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_METHODS_HELPURL = '/reference/components/media.html#speechrecognizermethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SPEECHRECOGNIZER_PROPERTIES_HELPURL = '/reference/components/media.html#speechrecognizerproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TABLEARRANGE_HELPURL = '/reference/components/layout.html#TableArrangement';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TABLEARRANGE_PROPERTIES_HELPURL = '/reference/components/layout.html#tablearrangeproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_EVENTS_HELPURL = '/reference/components/userinterface.html#textboxevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_HELPURL = '/reference/components/userinterface.html#TextBox';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_METHODS_HELPURL = '/reference/components/userinterface.html#textboxmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTBOX_PROPERTIES_HELPURL = '/reference/components/userinterface.html#textboxproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_EVENTS_HELPURL = '/reference/components/social.html#textingevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_HELPURL = '/reference/components/social.html#Texting';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_METHODS_HELPURL = '/reference/components/social.html#textingmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTING_PROPERTIES_HELPURL = '/reference/components/social.html#textingproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_EVENTS_HELPURL = '/reference/components/media.html#texttospeechevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_HELPURL = '/reference/components/media.html#TextToSpeech';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_METHODS_HELPURL = '/reference/components/media.html#texttospeechmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TEXTTOSPEECH_PROPERTIES_HELPURL = '/reference/components/media.html#texttospeechproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_EVENTS_HELPURL = '/reference/components/storage.html#tinydbevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_HELPURL = '/reference/components/storage.html#TinyDB';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_METHODS_HELPURL = '/reference/components/storage.html#tinydbmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TINYDB_PROPERTIES_HELPURL = '/reference/components/storage.html#tinydbproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_EVENTS_HELPURL = '/reference/components/storage.html#tinywebdbevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_HELPURL = '/reference/components/storage.html#TinyWebDB';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_METHODS_HELPURL = '/reference/components/storage.html#tinywebdbmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TINYWEBDB_PROPERTIES_HELPURL = '/reference/components/storage.html#tinywebdbproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TITLE_DO = 'делать';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TITLE_WHEN = 'когда';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_EVENTS_HELPURL = '/reference/components/social.html#twitterevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_HELPURL = '/reference/components/social.html#Twitter';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_METHODS_HELPURL = '/reference/components/social.html#twittermethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TWITTER_PROPERTIES_HELPURL = '/reference/components/social.html#twitterproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_VERTARRANGE_HELPURL = '/reference/components/layout.html#VerticalArrangement';
    Blockly.Msg.LANG_COMPONENT_BLOCK_VERTARRANGE_PROPERTIES_HELPURL = '/reference/components/layout.html#vertarrangeproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_EVENTS_HELPURL = '/reference/components/media.html#videoplayerevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_HELPURL = '/reference/components/media.html#VideoPlayer';
    Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_METHODS_HELPURL = '/reference/components/media.html#videoplayermethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_VIDEOPLAYER_PROPERTIES_HELPURL = '/reference/components/media.html#videoplayerproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_EVENTS_HELPURL = '/reference/components/internal.html#votingevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_HELPURL = '/reference/components/internal.html#Voting';
    Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_METHODS_HELPURL = '/reference/components/internal.html#votingmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_VOTING_PROPERTIES_HELPURL = '/reference/components/internal.html#votingproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_EVENTS_HELPURL = '/reference/components/userinterface.html#webviewerevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_HELPURL = '/reference/components/userinterface.html#WebViewer';
    Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_METHODS_HELPURL = '/reference/components/userinterface.html#webviewermethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_WEBVIEWER_PROPERTIES_HELPURL = '/reference/components/userinterface.html#webviewerproperties';
    Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_EVENTS_HELPURL = '/reference/components/connectivity.html#webevents';
    Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_HELPURL = '/reference/components/connectivity.html#Web';
    Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_METHODS_HELPURL = '/reference/components/connectivity.html#webmethods';
    Blockly.Msg.LANG_COMPONENT_BLOCK_WEB_PROPERTIES_HELPURL = '/reference/components/connectivity.html#webproperties';
    Blockly.Msg.LANG_CONTROLS_CHOOSE_COLLAPSED_TEXT = 'если';
    Blockly.Msg.LANG_CONTROLS_CHOOSE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#choose';
    Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_ELSE_RETURN = 'иначе';
    Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_TEST = '';
    Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_THEN_RETURN = 'то';
    Blockly.Msg.LANG_CONTROLS_CHOOSE_TITLE = 'если';
    Blockly.Msg.LANG_CONTROLS_CHOOSE_TOOLTIP = 'Если проверяемое условие истинно';
    Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_COLLAPSED_TEXT = 'закрыть приложение';
    Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#closeapp';
    Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_TITLE = 'закрыть приложение';
    Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_TOOLTIP = 'Закрывает все экраны в приложение и завершает приложение.';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_COLLAPSED_TEXT = 'закрыть экран';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#closescreen';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_TITLE = 'закрыть экран';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_TOOLTIP = 'Закрывает текущий экран';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_COLLAPSED_TEXT = 'закрыть текстовый экран';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#closescreenwithplaintext';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_INPUT_TEXT = 'текст';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_TITLE = 'закрыть текстовый экран';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_TOOLTIP = 'Закрывает текущий экран и возвращает текст приложению, которое';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_COLLAPSED_TEXT = 'закрыть окно и возвратить значение';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#closescreenwithvalue';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_INPUT_RESULT = 'результат';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_TITLE = 'закрыть экран и возвратить значение';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_TOOLTIP = 'Закрывает текущий экран и возвращает результат';
    Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_COLLAPSED_TEXT = 'выполнить/результат';
    Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#doreturn';
    Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_INPUT_DO = 'выполнить';
    Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_INPUT_RETURN = 'результат';
    Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_TITLE = 'выполнить результат';
    Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_TOOLTIP = 'Выполняет блоки в \'выполнить\' и возвращает значение. Полезно, если нужно выполнить процедуру до присваивания значения переменной.';
    Blockly.Msg.LANG_CONTROLS_EVAL_BUT_COLLAPSED_TEXT = 'выполнить, но проигнорировать';
    Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#evaluate';
    Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_TITLE = 'выполнить, но игнорировать результат';
    Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_TOOLTIP = 'Выполняет включённый блок кода и игнорирует возвращаемое значение (если оно есть). Полезно, если нужно вызвать процедуру, возвращающую значение, когда значение не нужно.';
    Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_HELPURL = 'http://en.wikipedia.org/wiki/Control_flow';
    Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_INPUT_OFLOOP = 'из цикла';
    Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = 'выйти из цикла';
    Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = 'перейти к следующему шагу цикла';
    Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = 'Выходит из текущего цикла.';
    Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = 'Пропускает остаток текущего шага цикла и';
    Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_WARNING = 'Предупреждение:';
    Blockly.Msg.LANG_CONTROLS_FOREACH_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#foreach';
    Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_PREFIX = 'для';
    Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_SUFFIX = ' в списке';
    Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_TEXT = 'для элемента в списке';
    Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_DO = 'выполнить';
    Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_INLIST = 'в списке';
    Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_ITEM = 'для каждого';
    Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_VAR = 'элемент';
    Blockly.Msg.LANG_CONTROLS_FOREACH_TOOLTIP = 'Выполняет блоки в секции \'выполнить\'  для каждого элемента в';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#forrange';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_PREFIX = 'для';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_SUFFIX = ' в интервале';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_TEXT = 'для числа в интервале';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_DO = 'выполнить';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_END = 'до';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_ITEM = 'для каждого';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_START = 'с';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_STEP = 'с шагом';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_VAR = 'число';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_TOOLTIP = 'Выполняет блоки в секции \'выполнить\' для каждого численного';
    Blockly.Msg.LANG_CONTROLS_FOR_HELPURL = '';
    Blockly.Msg.LANG_CONTROLS_FOR_INPUT_DO = 'выполнить';
    Blockly.Msg.LANG_CONTROLS_FOR_INPUT_FROM = 'с';
    Blockly.Msg.LANG_CONTROLS_FOR_INPUT_TO = 'до';
    Blockly.Msg.LANG_CONTROLS_FOR_INPUT_VAR = 'x';
    Blockly.Msg.LANG_CONTROLS_FOR_INPUT_WITH = 'с шагом';
    Blockly.Msg.LANG_CONTROLS_FOR_TOOLTIP = 'Присваивает значения от стартового числа до конечного числа.';
    Blockly.Msg.LANG_CONTROLS_GET_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#get';
    Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_COLLAPSED_TEXT = 'получить начальный текст';
    Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#getplainstarttext';
    Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_TITLE = 'получить начальный текст';
    Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_TOOLTIP = 'Возвращает текст, который был передан экрану при';
    Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_COLLAPSED_TEXT = 'получить начальное значение';
    Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#getstartvalue';
    Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_INPUT_SCREENNAME = 'названиеЭкрана';
    Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_INPUT_STARTVALUE = 'начальноеЗначение';
    Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_TITLE = 'получить начальное значение';
    Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_TOOLTIP = 'Возвращает значение, которое было передано экрану при его';
    Blockly.Msg.LANG_CONTROLS_IF_ELSEIF_TITLE_ELSEIF = 'иначе если';
    Blockly.Msg.LANG_CONTROLS_IF_ELSEIF_TOOLTIP = 'Добавьте условие к блоку если';
    Blockly.Msg.LANG_CONTROLS_IF_ELSE_TITLE_ELSE = 'иначе';
    Blockly.Msg.LANG_CONTROLS_IF_ELSE_TOOLTIP = 'Добавляет заключительную секцию к блоку если, когда все условия ложны';
    Blockly.Msg.LANG_CONTROLS_IF_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#if';
    Blockly.Msg.LANG_CONTROLS_IF_IF_TITLE_IF = 'если';
    Blockly.Msg.LANG_CONTROLS_IF_IF_TOOLTIP = 'Добавляет, удаляет, меняет порядок секций';
    Blockly.Msg.LANG_CONTROLS_IF_MSG_ELSE = 'иначе';
    Blockly.Msg.LANG_CONTROLS_IF_MSG_ELSEIF = 'иначе если';
    Blockly.Msg.LANG_CONTROLS_IF_MSG_IF = 'если';
    Blockly.Msg.LANG_CONTROLS_IF_MSG_THEN = 'то';
    Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_1 = 'Если условие истинно, то выполняет набор команд.';
    Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_2 = 'Если условие истинно, то выполняет первую группу команд.';
    Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_3 = 'Если первое условие истинно, то выполняет первую группу команд.';
    Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_4 = 'Если первое условие истинно, то выполняет первую группу  команд.';
    Blockly.Msg.LANG_CONTROLS_NOTHING_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#nothing';
    Blockly.Msg.LANG_CONTROLS_NOTHING_TITLE = 'ничего';
    Blockly.Msg.LANG_CONTROLS_NOTHING_TOOLTIP = '"Ничего не возвращает. Используется для инициализации переменных или может быть включено в ячейку возвращенного значения. Это является эквивалентом null или Ничего."';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_COLLAPSED_TEXT = 'открыть экран';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#openscreen';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_INPUT_SCREENNAME = 'названиеЭкрана';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_TITLE = 'открыть другой экран';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_TOOLTIP = 'Открывает экран в многоэкранном. приложении';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_COLLAPSED_TEXT = 'открывает экран с начальным значением';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#openscreenwithvalue';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_INPUT_SCREENNAME = 'названиеЭкрана';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_INPUT_STARTVALUE = 'начальноеЗначение';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_TITLE = 'открыть ещё один экран с начальным значением';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_TOOLTIP = 'Открывает новый экран в многоэкранном приложении и передаёт';
    Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#while';
    Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_INPUT_DO = 'выполнить';
    Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = 'до тех пор, пока';
    Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE = 'пока';
    Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TITLE_REPEAT = 'повторять';
    Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_1 = 'Запускает блок в секции "делать", пока тест ...';
    Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = 'Пока значение ложно, выполнять набор команд.';
    Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = 'Пока значение истинно, выполнять набор команд.';
    Blockly.Msg.LANG_CONTROLS_WHILE_COLLAPSED_TEXT = 'пока';
    Blockly.Msg.LANG_CONTROLS_WHILE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#while';
    Blockly.Msg.LANG_CONTROLS_WHILE_INPUT_DO = 'выполнить';
    Blockly.Msg.LANG_CONTROLS_WHILE_INPUT_TEST = 'проверить';
    Blockly.Msg.LANG_CONTROLS_WHILE_TITLE = 'пока';
    Blockly.Msg.LANG_CONTROLS_WHILE_TOOLTIP = 'Выполняет блоки в секции \'выполнить\', пока условие ';
    Blockly.Msg.LANG_LISTS_ADD_ITEMS_CONTAINER_TITLE_ADD = 'список';
    Blockly.Msg.LANG_LISTS_ADD_ITEMS_CONTAINER_TOOLTIP = 'Добавить, удалить или изменить порядок секций для изменения конфигурации этого блока списка.';
    Blockly.Msg.LANG_LISTS_ADD_ITEMS_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#additems';
    Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT = 'добавить элементы к списку список %1 список %2';
    Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT_ITEM = 'элемент';
    Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT_LIST = ' список';
    Blockly.Msg.LANG_LISTS_ADD_ITEMS_TITLE_ADD = 'добавить элементы в список';
    Blockly.Msg.LANG_LISTS_ADD_ITEMS_TOOLTIP = 'Добавляет элементы в конец списка.';
    Blockly.Msg.LANG_LISTS_ADD_ITEM_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#additems';
    Blockly.Msg.LANG_LISTS_ADD_ITEM_TITLE = 'элемент';
    Blockly.Msg.LANG_LISTS_ADD_ITEM_TOOLTIP = 'Добавляет элемент в список.';
    Blockly.Msg.LANG_LISTS_APPEND_LIST_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#append';
    Blockly.Msg.LANG_LISTS_APPEND_LIST_INPUT = 'добавить к списку  список1 %1 список2 %2';
    Blockly.Msg.LANG_LISTS_APPEND_LIST_INPUT_LIST1 = 'список1';
    Blockly.Msg.LANG_LISTS_APPEND_LIST_INPUT_LIST2 = 'список2';
    Blockly.Msg.LANG_LISTS_APPEND_LIST_TITLE_APPEND = 'добавить в список';
    Blockly.Msg.LANG_LISTS_APPEND_LIST_TOOLTIP = 'Добавляет все элементы в список2 в конец список1. После добавления список1 будет включать эти дополнительные элементы, тогда как список2 не изменится.';
    Blockly.Msg.LANG_LISTS_COPY_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#copy';
    Blockly.Msg.LANG_LISTS_COPY_INPUT_LIST = 'список';
    Blockly.Msg.LANG_LISTS_COPY_TITLE_COPY = 'скопировать список';
    Blockly.Msg.LANG_LISTS_COPY_TOOLTIP = 'Создаёт копию списка, включая все подсписки';
    Blockly.Msg.LANG_LISTS_CREATE_EMPTY_TITLE = 'создать пустой лист';
    Blockly.Msg.LANG_LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = 'список';
    Blockly.Msg.LANG_LISTS_CREATE_WITH_CONTAINER_TOOLTIP = 'Добавить, удалить или изменить порядок фрагментов для реконфигурации этого блока списка.';
    Blockly.Msg.LANG_LISTS_CREATE_WITH_EMPTY_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#makealist';
    Blockly.Msg.LANG_LISTS_CREATE_WITH_ITEM_TITLE = 'элемент';
    Blockly.Msg.LANG_LISTS_CREATE_WITH_ITEM_TOOLTIP = 'Добавляет элемент в список.';
    Blockly.Msg.LANG_LISTS_CREATE_WITH_TITLE_MAKE_LIST = 'создать список';
    Blockly.Msg.LANG_LISTS_CREATE_WITH_TOOLTIP = 'Создаёт список с произвольным числом элементов.';
    Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#listfromcsvrow';
    Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_INPUT_TEXT = 'текст';
    Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_TITLE_FROM_CSV = 'лист из строки csv';
    Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_TOOLTIP = 'Интерпретирует текст как CSV, чтобы произвести список полей. Наличие пустых строк в тексте ведет к ошибке. Текст может заканчиваться пустой строкой или CRLF.';
    Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#listfromcsvtable';
    Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_INPUT_TEXT = 'текст';
    Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_TITLE_FROM_CSV = 'список из таблицы csv';
    Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_TOOLTIP = 'Интерпретирует текст как таблицу, форматированную в CSV , чтобы произвести список строк, каждая из которых является списком полей. Строки могут быть разделены новыми строками (\n)  или CRLF (\r\n).';
    Blockly.Msg.LANG_LISTS_INPUT_LIST = 'список';
    Blockly.Msg.LANG_LISTS_INSERT_INPUT = 'вставляет элемент списка список %1 номер %2 номер %3';
    Blockly.Msg.LANG_LISTS_INSERT_INPUT_INDEX = 'указатель';
    Blockly.Msg.LANG_LISTS_INSERT_INPUT_ITEM = 'элемент';
    Blockly.Msg.LANG_LISTS_INSERT_INPUT_LIST = 'список';
    Blockly.Msg.LANG_LISTS_INSERT_ITEM_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#insert';
    Blockly.Msg.LANG_LISTS_INSERT_TITLE_INSERT_LIST = 'вставить элемент списка';
    Blockly.Msg.LANG_LISTS_INSERT_TOOLTIP = 'Вставляет элемент в указанную позицию в списке.';
    Blockly.Msg.LANG_LISTS_IS_EMPTY_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#islistempty';
    Blockly.Msg.LANG_LISTS_IS_EMPTY_TOOLTIP = 'Возвращает значение истина, если список пуст.';
    Blockly.Msg.LANG_LISTS_IS_IN_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#inlist';
    Blockly.Msg.LANG_LISTS_IS_IN_INPUT = 'в списке? элемент %1 список %2';
    Blockly.Msg.LANG_LISTS_IS_IN_INPUT_LIST = 'список';
    Blockly.Msg.LANG_LISTS_IS_IN_INPUT_THING = 'элемент';
    Blockly.Msg.LANG_LISTS_IS_IN_TITLE_IS_IN = 'есть в списке?';
    Blockly.Msg.LANG_LISTS_IS_IN_TOOLTIP = 'Возвращает верно, если элемент есть в списке и неверно - если нет.';
    Blockly.Msg.LANG_LISTS_IS_LIST_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#isalist';
    Blockly.Msg.LANG_LISTS_IS_LIST_INPUT_THING = 'список';
    Blockly.Msg.LANG_LISTS_IS_LIST_TITLE_IS_LIST = 'список?';
    Blockly.Msg.LANG_LISTS_IS_LIST_TOOLTIP = 'Проверяет, является ли аргумент списком.';
    Blockly.Msg.LANG_LISTS_LENGTH_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#lengthoflist';
    Blockly.Msg.LANG_LISTS_LENGTH_INPUT = 'длина списка список %1';
    Blockly.Msg.LANG_LISTS_LENGTH_INPUT_LENGTH = 'длина списка';
    Blockly.Msg.LANG_LISTS_LENGTH_INPUT_LIST = 'список';
    Blockly.Msg.LANG_LISTS_LENGTH_TOOLTIP = 'Возвращает число элементов в списке.';
    Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#lookuppairs';
    Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT = 'проверить в парах   ключ %1 пара %2 неНайден %3';
    Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_KEY = 'ключ';
    Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_NOT_FOUND = 'неНайден';
    Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_PAIRS = 'пары';
    Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_TITLE_LOOKUP_IN_PAIRS = 'искать в парах';
    Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_TOOLTIP = 'Возвращает значение, связанное с ключом в заданном списке пар.';
    Blockly.Msg.LANG_LISTS_PICK_RANDOM_ITEM_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#pickrandomitem';
    Blockly.Msg.LANG_LISTS_PICK_RANDOM_ITEM_INPUT_LIST = 'список';
    Blockly.Msg.LANG_LISTS_PICK_RANDOM_TITLE_PICK_RANDOM = 'выбрать случайный элемент';
    Blockly.Msg.LANG_LISTS_PICK_RANDOM_TOOLTIP = 'Выбирает случайный элемент из списка.';
    Blockly.Msg.LANG_LISTS_POSITION_IN_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#indexinlist';
    Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT = 'номер в списке   элемент %1 список %2';
    Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT_LIST = 'список';
    Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT_THING = 'элемент';
    Blockly.Msg.LANG_LISTS_POSITION_IN_TITLE_POSITION = 'номер в списке';
    Blockly.Msg.LANG_LISTS_POSITION_IN_TOOLTIP = 'Найти позицию элемента в списке. Если элемент не в списке, вернуть 0.';
    Blockly.Msg.LANG_LISTS_REMOVE_ITEM_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#removeitem';
    Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT = 'заменить элемент списка список %1 индекс %2';
    Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT_INDEX = 'указатель';
    Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT_LIST = 'список';
    Blockly.Msg.LANG_LISTS_REMOVE_ITEM_TITLE_REMOVE = 'удалить элемент списка';
    Blockly.Msg.LANG_LISTS_REMOVE_ITEM_TOOLTIP = 'Удаляет элемент в указанной позиции из списка.';
    Blockly.Msg.LANG_LISTS_REPLACE_ITEM_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#replace';
    Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT = 'заменить элемент списка %1 индекс %2 замена %3';
    Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_INDEX = 'индекс';
    Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_LIST = 'список';
    Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_REPLACEMENT = 'замена';
    Blockly.Msg.LANG_LISTS_REPLACE_ITEM_TITLE_REPLACE = 'заменить элемент в списке';
    Blockly.Msg.LANG_LISTS_REPLACE_ITEM_TOOLTIP = 'Заменяет n-ый элемент в списке.';
    Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT = 'выбрать это элемент списка %1 индекса %2';
    Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT_INDEX = 'указатель';
    Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT_LIST = 'список';
    Blockly.Msg.LANG_LISTS_SELECT_ITEM_TITLE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#selectlistitem';
    Blockly.Msg.LANG_LISTS_SELECT_ITEM_TITLE_SELECT = 'выбрать элемент списка';
    Blockly.Msg.LANG_LISTS_SELECT_ITEM_TOOLTIP = 'Возвращает элемент списка по его номеру.';
    Blockly.Msg.LANG_LISTS_TITLE_IS_EMPTY = 'список пуст?';
    Blockly.Msg.LANG_LISTS_TO_CSV_ROW_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#listtocsvrow';
    Blockly.Msg.LANG_LISTS_TO_CSV_ROW_INPUT_LIST = 'список';
    Blockly.Msg.LANG_LISTS_TO_CSV_ROW_TITLE_TO_CSV = 'список - в строку csv';
    Blockly.Msg.LANG_LISTS_TO_CSV_ROW_TOOLTIP = 'Интерпретирует список как строку таблицы и возвращает текст в CSV. Каждый элемент строки интерпретируется как поле, и заключается в кавычки. Элементы разделяются запятыми. Итоговый текст не разделяется строками.';
    Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/lists#listtocsvtable';
    Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_INPUT_LIST = 'список';
    Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_TITLE_TO_CSV = 'список - в таблицу csv';
    Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_TOOLTIP = 'Интерпретирует список в качестве таблицы и возвращает текст в CSV. Каждый элемент представляется строкой CSV таблицы. Каждый элемент таблицы считается полем, заключенным в двойные кавычки. В итоговом тексте элементы разделяются запятыми, а ряды - CRLF (\r\n).';
    Blockly.Msg.LANG_LOGIC_BOOLEAN_FALSE = 'ложь';
    Blockly.Msg.LANG_LOGIC_BOOLEAN_FALSE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/logic#false';
    Blockly.Msg.LANG_LOGIC_BOOLEAN_TOOLTIP_FALSE = 'Возвращает логическое значение ложь';
    Blockly.Msg.LANG_LOGIC_BOOLEAN_TOOLTIP_TRUE = 'Возвращает логическое значение истина';
    Blockly.Msg.LANG_LOGIC_BOOLEAN_TRUE = 'истина';
    Blockly.Msg.LANG_LOGIC_BOOLEAN_TRUE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/logic#true';
    Blockly.Msg.LANG_LOGIC_COMPARE_EQ = '=';
    Blockly.Msg.LANG_LOGIC_COMPARE_HELPURL = 'https://ru.wikipedia.org/wiki/%D0%9D%D0%B5%D1%80%D0%B0%D0%B2%D0%B5%D0%BD%D1%81%D1%82%D0%B2%D0%BE';
    Blockly.Msg.LANG_LOGIC_COMPARE_HELPURL_EQ = 'http://appinventor.mit.edu/explore/ai2/support/blocks/logic#=';
    Blockly.Msg.LANG_LOGIC_COMPARE_HELPURL_NEQ = 'http://appinventor.mit.edu/explore/ai2/support/blocks/logic#not=';
    Blockly.Msg.LANG_LOGIC_COMPARE_NEQ = '≠';
    Blockly.Msg.LANG_LOGIC_COMPARE_TOOLTIP_EQ = 'Проверяет равенство двух объектов.';
    Blockly.Msg.LANG_LOGIC_COMPARE_TOOLTIP_NEQ = 'Возвращает значение истина, если аргументы не равны';
    Blockly.Msg.LANG_LOGIC_COMPARE_TRANSLATED_NAME = 'логическое равенство';
    Blockly.Msg.LANG_LOGIC_NEGATE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/logic#not';
    Blockly.Msg.LANG_LOGIC_NEGATE_INPUT_NOT = 'не';
    Blockly.Msg.LANG_LOGIC_NEGATE_TOOLTIP = 'Возвращает значение истина, если аргумент ложен.';
    Blockly.Msg.LANG_LOGIC_OPERATION_AND = 'и';
    Blockly.Msg.LANG_LOGIC_OPERATION_HELPURL_AND = 'http://appinventor.mit.edu/explore/ai2/support/blocks/logic#and';
    Blockly.Msg.LANG_LOGIC_OPERATION_HELPURL_OR = 'http://appinventor.mit.edu/explore/ai2/support/blocks/logic#or';
    Blockly.Msg.LANG_LOGIC_OPERATION_OR = 'или';
    Blockly.Msg.LANG_LOGIC_OPERATION_TOOLTIP_AND = 'Возвращает значение истина, если все аргументы истинны';
    Blockly.Msg.LANG_LOGIC_OPERATION_TOOLTIP_OR = 'Возвращает значение истина, если среди аргументов есть истинный';
    Blockly.Msg.LANG_MATH_ARITHMETIC_ADD = '+';
    Blockly.Msg.LANG_MATH_ARITHMETIC_DIVIDE = '/';
    Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_ADD = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#add';
    Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_DIVIDE = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#divide';
    Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_MINUS = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#subtract';
    Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_MULTIPLY = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#multiply';
    Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_POWER = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#exponent';
    Blockly.Msg.LANG_MATH_ARITHMETIC_MINUS = '-';
    Blockly.Msg.LANG_MATH_ARITHMETIC_MULTIPLY = '*';
    Blockly.Msg.LANG_MATH_ARITHMETIC_POWER = '^';
    Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_ADD = 'Возвращает сумму двух чисел.';
    Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_DIVIDE = 'возвращает частное от деления.';
    Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_MINUS = 'Возвращает разность двух чисел.';
    Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_MULTIPLY = 'Возвращает произведение двух чисел.';
    Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_POWER = 'Возвращает первое число возведённое в';
    Blockly.Msg.LANG_MATH_COMPARE_EQ = '=';
    Blockly.Msg.LANG_MATH_COMPARE_GT = '>';
    Blockly.Msg.LANG_MATH_COMPARE_GTE = '≥';
    Blockly.Msg.LANG_MATH_COMPARE_HELPURL = '';
    Blockly.Msg.LANG_MATH_COMPARE_HELPURL_EQ = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#=';
    Blockly.Msg.LANG_MATH_COMPARE_HELPURL_GT = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#gt';
    Blockly.Msg.LANG_MATH_COMPARE_HELPURL_GTE = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#gte';
    Blockly.Msg.LANG_MATH_COMPARE_HELPURL_LT = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#lt';
    Blockly.Msg.LANG_MATH_COMPARE_HELPURL_LTE = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#lte';
    Blockly.Msg.LANG_MATH_COMPARE_HELPURL_NEQ = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#not=';
    Blockly.Msg.LANG_MATH_COMPARE_LT = '<';
    Blockly.Msg.LANG_MATH_COMPARE_LTE = '≤';
    Blockly.Msg.LANG_MATH_COMPARE_NEQ = '≠';
    Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_EQ = 'Возвращает значение истина, если числа равны';
    Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_GT = 'Возвращает значение истина, если первое число больше';
    Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_GTE = 'Возвращает значение истина, если первое число больше';
    Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_LT = 'Возвращает значение истина, если первое число меньше';
    Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_LTE = 'Возвращает значение истина, если первое число меньше';
    Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_NEQ = 'Возвращает значение истина, если числа не равны';
    Blockly.Msg.LANG_MATH_CONVERT_ANGLES_HELPURL_DEG_TO_RAD = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#convertdeg';
    Blockly.Msg.LANG_MATH_CONVERT_ANGLES_HELPURL_RAD_TO_DEG = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#convertrad';
    Blockly.Msg.LANG_MATH_CONVERT_ANGLES_OP_DEG_TO_RAD = 'углы в радианы';
    Blockly.Msg.LANG_MATH_CONVERT_ANGLES_OP_RAD_TO_DEG = 'радианы в углы';
    Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TITLE_CONVERT = 'преобразовать';
    Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TOOLTIP_DEG_TO_RAD = 'Возвращает величину угла в радианах в диапазоне [-u03C0, +u03C0) по заданному углу в градусах.';
    Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TOOLTIP_RAD_TO_DEG = 'Возвращает величину угла в градусах [0, 360) по заданному углу в радианах.';
    Blockly.Msg.LANG_MATH_CONVERT_NUMBER_HELPURL_BIN_TO_DEC = ' ';
    Blockly.Msg.LANG_MATH_CONVERT_NUMBER_HELPURL_DEC_TO_BIN = ' ';
    Blockly.Msg.LANG_MATH_CONVERT_NUMBER_HELPURL_DEC_TO_HEX = ' ';
    Blockly.Msg.LANG_MATH_CONVERT_NUMBER_HELPURL_HEX_TO_DEC = ' ';
    Blockly.Msg.LANG_MATH_CONVERT_NUMBER_OP_BIN_TO_DEC = 'двоичное в десятичное';
    Blockly.Msg.LANG_MATH_CONVERT_NUMBER_OP_DEC_TO_BIN = 'десятичное в двоичное';
    Blockly.Msg.LANG_MATH_CONVERT_NUMBER_OP_DEC_TO_HEX = 'десятичное в шестнадцатеричное';
    Blockly.Msg.LANG_MATH_CONVERT_NUMBER_OP_HEX_TO_DEC = 'шестнадцатеричное в десятичное';
    Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TITLE_CONVERT = 'преобразовать число';
    Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TOOLTIP_BIN_TO_DEC = 'Возвращает строку с десятичным представлением заданного двоичного числа';
    Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TOOLTIP_DEC_TO_BIN = 'Возвращает строку с двоичным представлением числа заданного десятичного числа';
    Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TOOLTIP_DEC_TO_HEX = 'Возвращает шестнадцатеричное представление заданного десятичного числа.';
    Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TOOLTIP_HEX_TO_DEC = 'Возвращает десятичное представление заданного шестнадцатеричного числа';
    Blockly.Msg.LANG_MATH_DIVIDE = 'u00F7';
    Blockly.Msg.LANG_MATH_DIVIDE_HELPURL_MODULO = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#modulo';
    Blockly.Msg.LANG_MATH_DIVIDE_HELPURL_QUOTIENT = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#quotient';
    Blockly.Msg.LANG_MATH_DIVIDE_HELPURL_REMAINDER = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#remainder';
    Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_MODULO = 'модуль';
    Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_QUOTIENT = 'частное от';
    Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_REMAINDER = 'остаток от';
    Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_MODULO = 'Возвращает остаток от деления.';
    Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_QUOTIENT = 'Возвращает частное.';
    Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_REMAINDER = 'Возвращает остаток.';
    Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#format';
    Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT = 'отформатировать как десятичное число %1 цифр%2';
    Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT_NUM = 'число';
    Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT_PLACES = 'места';
    Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_TITLE = 'форматировать как десятичное';
    Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_TOOLTIP = 'Возвращает число в десятичной форме с указанным числом цифр.';
    Blockly.Msg.LANG_MATH_IS_A_BINARY_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#isnumber';
    Blockly.Msg.LANG_MATH_IS_A_BINARY_INPUT_NUM = 'двоичное?';
    Blockly.Msg.LANG_MATH_IS_A_BINARY_TOOLTIP = 'Проверяет, представляет ли строка двоичное число.';
    Blockly.Msg.LANG_MATH_IS_A_DECIMAL_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#isnumber';
    Blockly.Msg.LANG_MATH_IS_A_DECIMAL_INPUT_NUM = 'основание 10?';
    Blockly.Msg.LANG_MATH_IS_A_DECIMAL_TOOLTIP = 'Проверяет, представляет ли строка десятичное число.';
    Blockly.Msg.LANG_MATH_IS_A_HEXADECIMAL_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#isnumber';
    Blockly.Msg.LANG_MATH_IS_A_HEXADECIMAL_INPUT_NUM = 'шестнадцатиричное?';
    Blockly.Msg.LANG_MATH_IS_A_HEXADECIMAL_TOOLTIP = 'Проверяет, представляет ли строка шестнадцатеричное число.';
    Blockly.Msg.LANG_MATH_IS_A_NUMBER_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#isnumber';
    Blockly.Msg.LANG_MATH_IS_A_NUMBER_INPUT_NUM = 'является числом?';
    Blockly.Msg.LANG_MATH_IS_A_NUMBER_TOOLTIP = 'Проверяет, является ли аргумент числом.';
    Blockly.Msg.LANG_MATH_MUTATOR_ITEM_INPUT_NUMBER = 'число';
    Blockly.Msg.LANG_MATH_NUMBER_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#number';
    Blockly.Msg.LANG_MATH_NUMBER_TOOLTIP = 'Задаёт число';
    Blockly.Msg.LANG_MATH_ONLIST_OPERATOR_MAX = 'max';
    Blockly.Msg.LANG_MATH_ONLIST_OPERATOR_MIN = 'мин.';
    Blockly.Msg.LANG_MATH_ONLIST_TOOLTIP_MAX = 'Возвращает наибольшее число списка..';
    Blockly.Msg.LANG_MATH_ONLIST_TOOLTIP_MIN = 'Возвращает минимальный элемент..';
    Blockly.Msg.LANG_MATH_RANDOM_FLOAT_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#randomfrac';
    Blockly.Msg.LANG_MATH_RANDOM_FLOAT_TITLE_RANDOM = 'случайная дробь';
    Blockly.Msg.LANG_MATH_RANDOM_FLOAT_TOOLTIP = 'Возвращает случайное число между 0 и 1.';
    Blockly.Msg.LANG_MATH_RANDOM_INT_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#randomint';
    Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT = 'случайное целое в диапазоне от %1 до %2';
    Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT_FROM = 'от';
    Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT_TO = 'до';
    Blockly.Msg.LANG_MATH_RANDOM_INT_TITLE_RANDOM = 'случайное целое';
    Blockly.Msg.LANG_MATH_RANDOM_INT_TOOLTIP = 'Возвращает случайное целое число в диапазоне между верхним и нижним. Диапазон будет ограничен между 2**30.';
    Blockly.Msg.LANG_MATH_RANDOM_SEED_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#randomseed';
    Blockly.Msg.LANG_MATH_RANDOM_SEED_INPUT_TO = 'в';
    Blockly.Msg.LANG_MATH_RANDOM_SEED_TITLE_RANDOM = 'случайный набор значений';
    Blockly.Msg.LANG_MATH_RANDOM_SEED_TOOLTIP = 'устанавливает случайное число для генератора случайных чисел';
    Blockly.Msg.LANG_MATH_ROUND_HELPURL_CEILING = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#ceiling';
    Blockly.Msg.LANG_MATH_ROUND_HELPURL_FLOOR = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#floor';
    Blockly.Msg.LANG_MATH_ROUND_HELPURL_ROUND = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#round';
    Blockly.Msg.LANG_MATH_ROUND_OPERATOR_CEILING = 'округление в меньшую сторону';
    Blockly.Msg.LANG_MATH_ROUND_OPERATOR_FLOOR = 'округление в большую сторону';
    Blockly.Msg.LANG_MATH_ROUND_OPERATOR_ROUND = 'округлить';
    Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_CEILING = 'Округляет вводимую величину до наименьшего значения не меньшего этой величины.';
    Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_FLOOR = 'Округляет вводимую величину до наибольшего значения не большего этой величины.';
    Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_ROUND = 'Округляет число до большего или меньшего.';
    Blockly.Msg.LANG_MATH_SINGLE_HELPURL_ABS = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#abs';
    Blockly.Msg.LANG_MATH_SINGLE_HELPURL_EXP = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#e';
    Blockly.Msg.LANG_MATH_SINGLE_HELPURL_LN = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#log';
    Blockly.Msg.LANG_MATH_SINGLE_HELPURL_NEG = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#neg';
    Blockly.Msg.LANG_MATH_SINGLE_HELPURL_ROOT = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#sqrt';
    Blockly.Msg.LANG_MATH_SINGLE_OP_ABSOLUTE = 'абсолютный';
    Blockly.Msg.LANG_MATH_SINGLE_OP_EXP = 'e^';
    Blockly.Msg.LANG_MATH_SINGLE_OP_LN = 'log';
    Blockly.Msg.LANG_MATH_SINGLE_OP_NEG = 'нег';
    Blockly.Msg.LANG_MATH_SINGLE_OP_ROOT = 'квадратный корень';
    Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_ABS = 'Возвращает абсолютное значение числа.';
    Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_EXP = 'Возвращает e (2,71828...) в заданной степени.';
    Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_LN = 'Возвращает натуральный логарифм числа (логарифм по основанию e = 2,71828...)';
    Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_NEG = 'Возвращает противоположное число.';
    Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_ROOT = 'Возвращает квадратный корень числа';
    Blockly.Msg.LANG_MATH_TRIG_ACOS = 'arccos';
    Blockly.Msg.LANG_MATH_TRIG_ASIN = 'arcsin';
    Blockly.Msg.LANG_MATH_TRIG_ATAN = 'arctg';
    Blockly.Msg.LANG_MATH_TRIG_ATAN2 = 'arctg2';
    Blockly.Msg.LANG_MATH_TRIG_ATAN2_X = 'x';
    Blockly.Msg.LANG_MATH_TRIG_ATAN2_Y = 'y';
    Blockly.Msg.LANG_MATH_TRIG_COS = 'cos';
    Blockly.Msg.LANG_MATH_TRIG_HELPURL_ACOS = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#acos';
    Blockly.Msg.LANG_MATH_TRIG_HELPURL_ASIN = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#asin';
    Blockly.Msg.LANG_MATH_TRIG_HELPURL_ATAN = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#atan';
    Blockly.Msg.LANG_MATH_TRIG_HELPURL_ATAN2 = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#atan2';
    Blockly.Msg.LANG_MATH_TRIG_HELPURL_COS = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#cos';
    Blockly.Msg.LANG_MATH_TRIG_HELPURL_SIN = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#sin';
    Blockly.Msg.LANG_MATH_TRIG_HELPURL_TAN = 'http://appinventor.mit.edu/explore/ai2/support/blocks/math#tan';
    Blockly.Msg.LANG_MATH_TRIG_SIN = 'sin';
    Blockly.Msg.LANG_MATH_TRIG_TAN = 'tg';
    Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ACOS = 'Возвращает угол в диапазоне [0, 180) градусов с заданным косинусом.';
    Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ASIN = 'Возвращает угол в диапазоне (-90, +90] градусов с заданным синусом.';
    Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ATAN = 'Возвращает угол в диапазоне (-90, +90) градусов с заданным тангенсом.';
    Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ATAN2 = 'Возвращает угол в диапазоне (-180, +180] градусов на точку с заданными координатими в прямоугольной системе координат.';
    Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_COS = 'Возвращает косинус угла (в градусах). ';
    Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_SIN = 'Возвращает синус заданного угла в градусах.';
    Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_TAN = 'Возвращает тангенс угла (в градусах)';
    Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_CALL = 'вызвать ';
    Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_COLLAPSED_PREFIX = 'вызвать ';
    Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#do';
    Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_PROCEDURE = 'процедура';
    Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_TOOLTIP = 'Вызывает процедуру, не возвращающую значение.';
    Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_TRANSLATED_NAME = 'вызвать "не возвращать"';
    Blockly.Msg.LANG_PROCEDURES_CALLRETURN_COLLAPSED_PREFIX = 'вызвать ';
    Blockly.Msg.LANG_PROCEDURES_CALLRETURN_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#return';
    Blockly.Msg.LANG_PROCEDURES_CALLRETURN_TOOLTIP = 'Вызывает проуедуру, возвращающую значение.';
    Blockly.Msg.LANG_PROCEDURES_CALLRETURN_TRANSLATED_NAME = 'вызвать "вернуть"';
    Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_COLLAPSED_PREFIX = 'в';
    Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DEFINE = 'в';
    Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DO = 'выполнить';
    Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#do';
    Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_PROCEDURE = 'процедура';
    Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_TOOLTIP = 'Процедура, не возвращающая значение.';
    Blockly.Msg.LANG_PROCEDURES_DEFRETURN_COLLAPSED_PREFIX = 'в';
    Blockly.Msg.LANG_PROCEDURES_DEFRETURN_DEFINE = 'в';
    Blockly.Msg.LANG_PROCEDURES_DEFRETURN_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#return';
    Blockly.Msg.LANG_PROCEDURES_DEFRETURN_RETURN = 'результат';
    Blockly.Msg.LANG_PROCEDURES_DEFRETURN_TOOLTIP = 'Процедура возвращающая значение.';
    Blockly.Msg.LANG_PROCEDURES_DEF_DUPLICATE_WARNING = 'Предупреждение:n У этой процедуры есть n повторяющихся элементов ввода.';
    Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_COLLAPSED_TEXT = 'выполнить/результат';
    Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_DO = 'делать';
    Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#doreturn';
    Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_RETURN = 'результат';
    Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_THEN_RETURN = 'результат';
    Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_TOOLTIP = 'Запускает блоки в "выполнить" и возвращает значение. Это полезно, если вы хотите выполнить процедуру, перед тем, как возвращать значение переменной.';
    Blockly.Msg.LANG_PROCEDURES_GET_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/procedures#get';
    Blockly.Msg.LANG_PROCEDURES_HIGHLIGHT_DEF = 'Выделить Процедуру';
    Blockly.Msg.LANG_PROCEDURES_MUTATORARG_TITLE = 'ввод:';
    Blockly.Msg.LANG_PROCEDURES_MUTATORARG_TOOLTIP = ' ';
    Blockly.Msg.LANG_PROCEDURES_MUTATORCONTAINER_TITLE = 'параметры';
    Blockly.Msg.LANG_PROCEDURES_MUTATORCONTAINER_TOOLTIP = ' ';
    Blockly.Msg.LANG_TEXT_APPEND_APPENDTEXT = 'добавить текст';
    Blockly.Msg.LANG_TEXT_APPEND_HELPURL = 'http://www.liv.ac.uk/HPC/HTMLF90Course/HTMLF90CourseNotesnode91.html';
    Blockly.Msg.LANG_TEXT_APPEND_TO = 'к';
    Blockly.Msg.LANG_TEXT_APPEND_TOOLTIP = 'Добавляет текст к переменной "%1".';
    Blockly.Msg.LANG_TEXT_APPEND_VARIABLE = 'элемент';
    Blockly.Msg.LANG_TEXT_CHANGECASE_HELPURL_DOWNCASE = 'http://appinventor.mit.edu/explore/ai2/support/blocks/text#downcase';
    Blockly.Msg.LANG_TEXT_CHANGECASE_HELPURL_UPPERCASE = 'http://appinventor.mit.edu/explore/ai2/support/blocks/text#upcase';
    Blockly.Msg.LANG_TEXT_CHANGECASE_OPERATOR_DOWNCASE = 'строчные буквы';
    Blockly.Msg.LANG_TEXT_CHANGECASE_OPERATOR_UPPERCASE = 'заглавные буквы';
    Blockly.Msg.LANG_TEXT_CHANGECASE_TOOLTIP_DOWNCASE = 'Возвращает копию текста со строчными буквами.';
    Blockly.Msg.LANG_TEXT_CHANGECASE_TOOLTIP_UPPERCASE = 'Возвращает копию текста с заглавными буквами. ';
    Blockly.Msg.LANG_TEXT_COMPARE_EQUAL = '=';
    Blockly.Msg.LANG_TEXT_COMPARE_GT = ' >';
    Blockly.Msg.LANG_TEXT_COMPARE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/text#compare';
    Blockly.Msg.LANG_TEXT_COMPARE_INPUT_COMPARE = 'сравнить тексты';
    Blockly.Msg.LANG_TEXT_COMPARE_LT = ' <';
    Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_EQUAL = 'Проверяет, являются ли текстовые цепочки идентичными, т.е. содержит ли одинаковые символы в нужном порядке. Это отличается от обычного =n в случае, если текстовые цепочки являются номерами: 123 и 0123 =n, но не text =.';
    Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_GT = 'Сообщает, является ли text1 большей цепочкой, чем text2. Более короткая цепочка считается меньшей. Символы в верхнем регистре размещаются раньше символов в нижнем регистре.';
    Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_LT = 'Проверяет, меньше ли текст1, чем текст2. Если один текст является началом другого, то более короткий текст считается меньшим. Заглавные буквы предшествуют строчным.';
    Blockly.Msg.LANG_TEXT_CONTAINS_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/text#contains';
    Blockly.Msg.LANG_TEXT_CONTAINS_INPUT = 'содержит текстовый %1 фрагмент %2';
    Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_CONTAINS = 'содержит';
    Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_PIECE = 'фрагмент';
    Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_TEXT = 'text';
    Blockly.Msg.LANG_TEXT_CONTAINS_TOOLTIP = 'Проверяет, содержится ли подстрока в тексте.';
    Blockly.Msg.LANG_TEXT_ISEMPTY_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/text#isempty';
    Blockly.Msg.LANG_TEXT_ISEMPTY_INPUT_ISEMPTY = 'является пустым';
    Blockly.Msg.LANG_TEXT_ISEMPTY_TOOLTIP = 'возвращает истина, если длина текста равна 0, и ложь в противном случае. ';
    Blockly.Msg.LANG_TEXT_JOIN_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/text#join';
    Blockly.Msg.LANG_TEXT_JOIN_ITEM_TITLE_ITEM = 'строка';
    Blockly.Msg.LANG_TEXT_JOIN_ITEM_TOOLTIP = ' ';
    Blockly.Msg.LANG_TEXT_JOIN_TITLE_CREATEWITH = 'создать текст из';
    Blockly.Msg.LANG_TEXT_JOIN_TITLE_JOIN = 'соединить';
    Blockly.Msg.LANG_TEXT_JOIN_TOOLTIP = 'Создаёт текст из произвольного числа элементов. Если входных параметров нет - создаётся пустой текст.';
    Blockly.Msg.LANG_TEXT_LENGTH_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/text#length';
    Blockly.Msg.LANG_TEXT_LENGTH_INPUT_LENGTH = 'длина';
    Blockly.Msg.LANG_TEXT_LENGTH_TOOLTIP = 'Возвращает число символов (включая пробелы) в тексте.';
    Blockly.Msg.LANG_TEXT_PRINT_TITLE_PRINT = 'напечатать';
    Blockly.Msg.LANG_TEXT_PRINT_TOOLTIP = 'Печатает текст, число или другой объект.';
    Blockly.Msg.LANG_TEXT_REPLACE_ALL_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/text#replaceall';
    Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT = 'заменить все  текстовые %1 сегменты %2 замена %3';
    Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_REPLACEMENT = 'замена';
    Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_SEGMENT = 'отрезок';
    Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_TEXT = 'текст';
    Blockly.Msg.LANG_TEXT_REPLACE_ALL_TITLE_REPLACE_ALL = 'заменить все';
    Blockly.Msg.LANG_TEXT_REPLACE_ALL_TOOLTIP = 'Возвращает новый текст, полученный в результате замены заданного сегмента определенным текстом.';
    Blockly.Msg.LANG_TEXT_SEGMENT_AT_TOOLTIP = 'Извлекает сегмент заданной длины из данного текста, начиная с заданной позиции. Позиция1 означает начало текста.';
    Blockly.Msg.LANG_TEXT_SEGMENT_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/text#segment';
    Blockly.Msg.LANG_TEXT_SEGMENT_INPUT = 'сегмент текста %1 начало %2 длина %3';
    Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_LENGTH = 'длина';
    Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_START = 'начало';
    Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_TEXT = 'текст';
    Blockly.Msg.LANG_TEXT_SEGMENT_TITLE_SEGMENT = 'отрезок';
    Blockly.Msg.LANG_TEXT_SPLIT_AT_SPACES_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/text#splitspaces';
    Blockly.Msg.LANG_TEXT_SPLIT_AT_SPACES_TITLE = 'разбить по пробелам';
    Blockly.Msg.LANG_TEXT_SPLIT_AT_TOOLTIP = 'Разделить текст на фрагменты, разделенные пробелами.';
    Blockly.Msg.LANG_TEXT_SPLIT_HELPURL = ' ';
    Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT = 'http://appinventor.mit.edu/explore/ai2/support/blocks/text#split';
    Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT_AT_ANY = 'http://appinventor.mit.edu/explore/ai2/support/blocks/text#splitatany';
    Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT_AT_FIRST = 'http://appinventor.mit.edu/explore/ai2/support/blocks/text#splitat';
    Blockly.Msg.LANG_TEXT_SPLIT_HELPURL_SPLIT_AT_FIRST_OF_ANY = 'http://appinventor.mit.edu/explore/ai2/support/blocks/text#splitatfirstofany';
    Blockly.Msg.LANG_TEXT_SPLIT_INPUT_AT = 'с';
    Blockly.Msg.LANG_TEXT_SPLIT_INPUT_AT_LIST = 'в (список)';
    Blockly.Msg.LANG_TEXT_SPLIT_INPUT_TEXT = 'текст';
    Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT = 'разделить';
    Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_ANY = 'разделить в любом';
    Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_FIRST = 'разбить по первому';
    Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_FIRST_OF_ANY = 'разбить по первому из набора';
    Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT = 'Разделяет текст на фрагменты, используя разделитель и производит список результатов. Разделение "один,два,три, четыре" с помощью "," (запятая) возвращает список (один два три четыре). Разделение "один-картошка,два-картошка,три-картошка, четыре" с помощью "-картошка" возвращает список (один два три четыре).';
    Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_ANY = 'Разделяет данный текст на список, используя любые элементы списка в качестве разделителей и возвращает список результатов. Разделение "яблокоягода,банан,вишня,собачьяеда" с помощью запятой и "да" возвращает спискок (яблокояго банан вишня собачьяе).';
    Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_FIRST = 'Делит заданный текст на два фрагмента на основе того, где встречается "в" как разделитель и возвращает список из двух пунктов, состоящих из фрагмента перед разделителем и фрагмента после разделителя. Разбиение "яблоко,банан,вишня,собачьяеда" запятой возвращает список из двух элементов: тексты - "яблоко" и "банан,вишня,собачьяеда". Обратите внимание, что запятая после слова "яблоко" не появляется в результирующем тексте, поскольку это разделитель.';
    Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_FIRST_OF_ANY = 'Разделяет заданный текст на список из двух элементов, используя первое местоположение любого элемента списка как разделитель. Разделение текста "я люблю яблоки бананы яблоки виноград" с помощью (ба, яб) возвращает два элемента - "я люблю" и "яблоки бананы яблоки виноград".';
    Blockly.Msg.LANG_TEXT_STARTS_AT_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/text#startsat';
    Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT = 'начинается с текстового %1 фрагмента %2';
    Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_PIECE = 'фрагмент';
    Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_STARTS_AT = 'начинается с';
    Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_TEXT = 'текст';
    Blockly.Msg.LANG_TEXT_STARTS_AT_TOOLTIP = 'Возвращает начальную позицию в тексте. Позиция 1 означает начало текста. Если элемент не встречается в тексте, возвращает 0.';
    Blockly.Msg.LANG_TEXT_TEXT_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/text#string';
    Blockly.Msg.LANG_TEXT_TEXT_LEFT_QUOTE = '\u201C';
    Blockly.Msg.LANG_TEXT_TEXT_OBFUSCATE = 'Обрезанный текст';
    Blockly.Msg.LANG_TEXT_TEXT_OBFUSCATE_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/text#obfuscatetext';
    Blockly.Msg.LANG_TEXT_TEXT_OBFUSCATE_TOOLTIP = 'Производит текст, как и текстовый блок. Разница состоит в том, что ntext не так легко найти, как APK. Используйте его при создании приложений для того, чтобы передать конфиденциальную информацию, например ключи API. Предупреждение: уровень безопасности этого решения остается невысоким.';
    Blockly.Msg.LANG_TEXT_TEXT_RIGHT_QUOTE = '\u201D';
    Blockly.Msg.LANG_TEXT_TEXT_TOOLTIP = 'Текстовая строка.';
    Blockly.Msg.LANG_TEXT_TRIM_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/text#trim';
    Blockly.Msg.LANG_TEXT_TRIM_TITLE_TRIM = 'обрезать';
    Blockly.Msg.LANG_TEXT_TRIM_TOOLTIP = 'Возвращает копию его аргументов текстовой цепочки, удаляя все знаки пробелов.';
    Blockly.Msg.LANG_VARIABLES_GET_COLLAPSED_TEXT = 'получить';
    Blockly.Msg.LANG_VARIABLES_GET_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/variables#get';
    Blockly.Msg.LANG_VARIABLES_GET_TITLE_GET = 'получить';
    Blockly.Msg.LANG_VARIABLES_GET_TOOLTIP = 'Возвращает значение переменной.';
    Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_COLLAPSED_TEXT = 'глобальная';
    Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/variables#global';
    Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_NAME = 'имя';
    Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TITLE_INIT = 'инициализировать глобальную';
    Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TO = 'в';
    Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TOOLTIP = 'Создаёт глобальную переменную и присваивает её значение прикреплённых блоков.';
    Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_COLLAPSED_TEXT = 'локальная';
    Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_DEFAULT_NAME = 'имя';
    Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_COLLAPSED_TEXT = 'локальная';
    Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/variables#return';
    Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_INPUT_NAME = 'имя';
    Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_INPUT_TO = 'в';
    Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_IN_RETURN = 'в';
    Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_TITLE_INIT = 'инициализировать локальную ';
    Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_TOOLTIP = 'Позволяет создавать переменные, доступные в части блока "Вернуть".';
    Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_TRANSLATED_NAME = 'инициализировать локальную в "Вернуть"';
    Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/variables#do';
    Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_INPUT_TO = 'в';
    Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_IN_DO = 'в';
    Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TITLE_INIT = 'инициализировать локальную';
    Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TOOLTIP = 'Позволяет создавать переменные, доступные только в части блока "выполнить".';
    Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TRANSLATED_NAME = 'инициализировать локальную переменную в';
    Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_ARG_DEFAULT_VARIABLE = 'x';
    Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_ARG_TITLE_NAME = 'имя';
    Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_CONTAINER_TITLE_LOCAL_NAMES = 'локальные имена';
    Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_CONTAINER_TOOLTIP = ' ';
    Blockly.Msg.LANG_VARIABLES_SET_COLLAPSED_TEXT = 'установить';
    Blockly.Msg.LANG_VARIABLES_SET_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/variables#set';
    Blockly.Msg.LANG_VARIABLES_SET_TITLE_SET = 'присвоить';
    Blockly.Msg.LANG_VARIABLES_SET_TITLE_TO = 'в';
    Blockly.Msg.LANG_VARIABLES_SET_TOOLTIP = 'Присваивает переменной значение вставки.';
    Blockly.Msg.LANG_VARIABLES_VARIABLE = ' переменная';
    Blockly.Msg.MISSING_SOCKETS_WARNINGS = 'Вы должны заполнить блоками все гнезда';
    Blockly.Msg.REMOVE_COMMENT = 'Удалить комментарий';
    Blockly.Msg.REPL_AI_NO_SEE_DEVICE = 'AI2 не распознает ваше устройство. Убедитесь, что кабель подключен и драйвера установлены.';
    Blockly.Msg.REPL_APPROVE_UPDATE = 'поскольку вам будет предложено подтвердить обновление.';
    Blockly.Msg.REPL_CANCEL = 'Отменить';
    Blockly.Msg.REPL_COMPANION_OUT_OF_DATE = 'Ваш Companion устарел. Нажмите ОК для того, чтобы скачать обновление. Наблюдайте за';
    Blockly.Msg.REPL_COMPANION_OUT_OF_DATE1 = 'Версия Companion, которую вы используете, устарела.<br/><br/>Эта версия App Inventor должна использоваться с версией Companion.';
    Blockly.Msg.REPL_COMPANION_OUT_OF_DATE_IMMEDIATE = 'Вы используете устаревшую версию Companion. Вам нужно будет - сейчас или впоследствии обновить ваш Companion.';
    Blockly.Msg.REPL_COMPANION_STARTED_WAITING = 'Companion запускается, ожидаем...';
    Blockly.Msg.REPL_COMPANION_VERSION_CHECK = 'Проверка версии Companion';
    Blockly.Msg.REPL_CONNECTING = 'Подключение...';
    Blockly.Msg.REPL_CONNECTING_USB_CABLE = 'Подключение через кабель USB';
    Blockly.Msg.REPL_CONNECTION_FAILURE1 = 'Ошибка соединения';
    Blockly.Msg.REPL_CONNECT_TO_COMPANION = 'Подключиться к Companion';
    Blockly.Msg.REPL_DEVICES = 'эмулятора устройства';
    Blockly.Msg.REPL_DISMISS = 'Отменить';
    Blockly.Msg.REPL_DO_YOU_REALLY_Q = 'Вы уверены?';
    Blockly.Msg.REPL_EMULATORS = 'экраном';
    Blockly.Msg.REPL_EMULATOR_STARTED = 'Эмулятор запущен, ожидайте';
    Blockly.Msg.REPL_ERROR_FROM_COMPANION = 'Ошибка в Companion';
    Blockly.Msg.REPL_FACTORY_RESET = 'Мы попробуем вернуть эмулятор к фабричным настройкам. Если вы недавно обновляли Companion, вам, скорее всего придется сделать это снова.';
    Blockly.Msg.REPL_GIVE_UP = 'Отказаться';
    Blockly.Msg.REPL_GOT_IT = 'Согласен.';
    Blockly.Msg.REPL_HELPER_NOT_RUNNING = 'Запуск AI не работает <br /><a href="http://appinventor.mit.edu" target="_blank">Нужна помощь?</a>';
    Blockly.Msg.REPL_HELPER_Q = 'Нужна справка?';
    Blockly.Msg.REPL_KEEP_TRYING = 'Продолжить ожидание';
    Blockly.Msg.REPL_NETWORK_CONNECTION_ERROR = 'Ошибка сетевого соединения';
    Blockly.Msg.REPL_NETWORK_ERROR = 'Ошибка сети';
    Blockly.Msg.REPL_NETWORK_ERROR_RESTART = 'Сетевая ошибка связи с Companion. <br /> Попробуйте перезапустить Companion и повторить попытку соединения.';
    Blockly.Msg.REPL_NOT_NOW = 'Не сейчас';
    Blockly.Msg.REPL_NOW_DOWNLOADING = 'Загружается обновление с сервера App Inventor, пожалуйста, подождите';
    Blockly.Msg.REPL_NO_ERROR_FIVE_SECONDS = '<br/><i>Внимание:</i>&nbsp;Отчет о другой ошибке появится не ранее, чем через 5 секунд.';
    Blockly.Msg.REPL_NO_START_EMULATOR = 'Невозможно запустить MIT AI Companion с эмулятором';
    Blockly.Msg.REPL_OK = 'OK';
    Blockly.Msg.REPL_OK_LOWER = 'Ок';
    Blockly.Msg.REPL_PLUGGED_IN_Q = 'Вы подключены?';
    Blockly.Msg.REPL_RUNTIME_ERROR = 'Ошибка времени исполнения';
    Blockly.Msg.REPL_SECONDS_ENSURE_RUNNING = ' секунд, чтобы убедиться, что всё работает.';
    Blockly.Msg.REPL_SOFTWARE_UPDATE = 'Обновление программы';
    Blockly.Msg.REPL_STARTING_COMPANION_IN_EMULATOR = 'Запускаем приложение Companion на эмуляторе.';
    Blockly.Msg.REPL_STARTING_COMPANION_ON_PHONE = 'Запускаем приложение Companion на подключенном телефоне.';
    Blockly.Msg.REPL_STARTING_EMULATOR = ' Android эмулятор запускается<br/>Подождите: Это может занять одну - две минуты.';
    Blockly.Msg.REPL_TRY_AGAIN1 = 'Подключиться к MIT AI2 Companion не удалось. Попробуйте снова.';
    Blockly.Msg.REPL_UNABLE_TO_LOAD = 'Не могу загрузить обновление с сервера App Inventor.';
    Blockly.Msg.REPL_UNABLE_TO_LOAD_NO_RESPOND = 'Невозможно загрузать обновление с сервера App Inventor (сервер не отвечает)';
    Blockly.Msg.REPL_UNABLE_TO_UPDATE = 'Не могу отправить обновление на устройство/эмулятор';
    Blockly.Msg.REPL_UPDATE_INFO = 'На ваше устройство установлено дополнение. Посмотрите на экран вашего устройство и подтвердите установку программы. <br /><br />Важно: когда установка закончится, нажмите "ЗАВЕРШИТЬ"(а не открыть). Затем перейдите в App Inventor в вашем браузере, нажмите на "Подключить" и выберите "Переподключиться". Затем переподключите ваше устройство.';
    Blockly.Msg.REPL_USB_CONNECTED_WAIT = 'Подключение по USB. Подождите';
    Blockly.Msg.REPL_VERIFYING_COMPANION = 'Проверяем, запущен ли Companion...';
    Blockly.Msg.REPL_YOUR_CODE_IS = 'Ваш код';
    Blockly.Msg.SHOW_WARNINGS = 'Показывать предупреждения';
    Blockly.Msg.SORT_C = 'Отсортировать блоки по категории';
    Blockly.Msg.SORT_H = 'Отсортировать блоки по высоте';
    Blockly.Msg.SORT_W = 'Отсортировать блоки по ширине';
    Blockly.Msg.VERTICAL_PARAMETERS = 'Расположить параметры вертикально';
    Blockly.Msg.WARNING_DELETE_X_BLOCKS = 'Вы уверены, что хотите удалить все эти %1 блоков?';
    Blockly.Msg.WRONG_TYPE_BLOCK_WARINGS = 'Этот блок должен быть присоединён к блоку обработки события или определению процедуры';
//Blockly.Msg.LANG_LISTS_CREATE_EMPTY_HELPURL = 'http://en.wikipedia.org/wiki/Linked_list#Empty_lists';
//Blockly.Msg.LANG_LISTS_CREATE_EMPTY_TOOLTIP = 'Возвращает список длины 0, не содержаший записей.';
  }
};

// Initalize language definition to Russian
Blockly.Msg.ru.switch_language_to_russian.init();
